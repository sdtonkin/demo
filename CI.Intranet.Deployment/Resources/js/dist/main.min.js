/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var app = angular.module('compassionIntranet', []).config(function ($sceDelegateProvider) {
	    $sceDelegateProvider.resourceUrlWhitelist([
	    // Allow same origin resource loads.
	    'self',
	    // Allow loading from our assets domain. **.
	    'https://api.rss2json.com/**']);
	});

	__webpack_require__(1);
	__webpack_require__(2);

	// Services
	__webpack_require__(3);
	__webpack_require__(4);
	__webpack_require__(5);
	__webpack_require__(6);
	__webpack_require__(7);
	__webpack_require__(8);
	__webpack_require__(9);
	__webpack_require__(10);
	__webpack_require__(11);
	__webpack_require__(12);
	__webpack_require__(13);
	__webpack_require__(14);
	__webpack_require__(15);
	__webpack_require__(16);
	__webpack_require__(17);
	__webpack_require__(18);
	__webpack_require__(19);
	__webpack_require__(20);
	__webpack_require__(21);
	__webpack_require__(22);
	__webpack_require__(23);
	__webpack_require__(24);
	__webpack_require__(25);
	__webpack_require__(26);
	__webpack_require__(27);

	// System Components

	__webpack_require__(28);
	__webpack_require__(29);

	// Components
	__webpack_require__(30);
	__webpack_require__(32);
	__webpack_require__(34);
	__webpack_require__(36);
	__webpack_require__(38);
	__webpack_require__(40);
	__webpack_require__(42);
	__webpack_require__(44);
	__webpack_require__(46);
	__webpack_require__(48);
	__webpack_require__(50);
	__webpack_require__(51);
	__webpack_require__(53);
	__webpack_require__(55);
	__webpack_require__(57);
	__webpack_require__(59);
	__webpack_require__(61);
	__webpack_require__(63);
	__webpack_require__(65);
	__webpack_require__(67);
	__webpack_require__(69);
	__webpack_require__(71);
	__webpack_require__(73);
	__webpack_require__(75);
	__webpack_require__(77);
	__webpack_require__(79);
	__webpack_require__(81);
	__webpack_require__(83);
	__webpack_require__(85);
	__webpack_require__(87);
	__webpack_require__(89);
	__webpack_require__(91);

/***/ }),
/* 1 */
/***/ (function(module, exports) {

	'use strict';

	// set up static configuration entries
	var myApp = angular.module('compassionIntranet');
	if (document.location.host === "compassion.sharepoint.com") {
	    if (document.location.pathname.toLowerCase().indexOf('/sites/stage') !== -1) {
	        myApp.constant('COM_CONFIG', {
	            isProduction: false,
	            msGraph: {
	                appId: '287d9b56-5352-4f58-a8f5-1de40966c6c9',
	                redirectUri: 'https://compassion.sharepoint.com/sites/stage',
	                interactionMode: 'popUp',
	                graphEndpoint: 'https://graph.microsoft.com/v1.0/me',
	                graphScopes: ['user.read.all']
	            },
	            yammer: {
	                appId: '',
	                network: 'compassion.com',
	                defaultGroupId: '12687321'
	            },
	            termSets: {
	                locationTermId: '88ed9770-2805-4c59-be2e-d8775b5aedb5',
	                globalPartnersTermId: '22689db7-16ba-423e-89fc-ebeab7b74484'
	            },
	            useCaching: false,
	            rootWeb: 'https://compassion.sharepoint.com/sites/stage',
	            searchWeb: 'https://compassion.sharepoint.com/sites/search/pages/results.aspx',
	            rssProxyUrl: "https://api.rss2json.com/v1/api.json?rss_url=",
	            lists: {
	                rssFeedsListTitle: 'RSS Feeds',
	                userRssFeedsListTitle: 'User RSS Feeds',
	                userApps: 'User Tools',
	                toolbarApps: 'Toolbar Tools',
	                userBookmarks: 'User Bookmarks',
	                groupInfo: 'Group Info',
	                groupLeadership: 'Contacts',
	                navigation: 'Navigation',
	                userInfo: 'User Information List',
	                globalPartners: 'Global Partners',
	                missionPhotos: 'missionPhotos',
	                gratitudes: 'Gratitudes',
	                anniversary: 'Anniversary and Retirement',
	                newHire: 'New Hires',
	                resourceLinks: 'Resource Links'
	            }
	        });
	    } else {
	        myApp.constant('COM_CONFIG', {
	            isProduction: true,
	            msGraph: {
	                appId: '287d9b56-5352-4f58-a8f5-1de40966c6c9 ',
	                redirectUri: 'https://teganwilson.sharepoint.com/',
	                interactionMode: 'popUp',
	                graphEndpoint: 'https://graph.microsoft.com/v1.0/me',
	                graphScopes: ['user.read.all']
	            },
	            yammer: {
	                appId: '',
	                network: 'compassion.com',
	                defaultGroupId: '12687321'
	            },
	            termSets: {
	                locationTermId: '88ed9770-2805-4c59-be2e-d8775b5aedb5',
	                globalPartnersTermId: '22689db7-16ba-423e-89fc-ebeab7b74484'
	            },
	            useCaching: false,
	            rootWeb: 'https://compassion.sharepoint.com',
	            searchWeb: 'https://compassion.sharepoint.com/sites/search/pages/results.aspx',
	            rssProxyUrl: "https://api.rss2json.com/v1/api.json?rss_url=",
	            lists: {
	                rssFeedsListTitle: 'RSS Feeds',
	                userRssFeedsListTitle: 'User RSS Feeds',
	                userApps: 'User Tools',
	                toolbarApps: 'Toolbar Tools',
	                userBookmarks: 'User Bookmarks',
	                groupInfo: 'Group Info',
	                groupLeadership: 'Contacts',
	                navigation: 'Navigation',
	                userInfo: 'User Information List',
	                globalPartners: 'Global Partners',
	                missionPhotos: 'missionPhotos',
	                gratitudes: 'Gratitudes',
	                anniversary: 'Anniversary and Retirement',
	                newHire: 'New Hires',
	                resourceLinks: 'Resource Links'
	            }
	        });
	    }
	}
	//Dev Tenant
	else {
	        myApp.constant('COM_CONFIG', {
	            isProduction: false,
	            msGraph: {
	                appId: 'bc64af36-7263-4bab-8828-c25a37185bb3',
	                redirectUri: 'https://teganwilson.sharepoint.com/sites/compassion',
	                interactionMode: 'popUp',
	                graphEndpoint: 'https://graph.microsoft.com/v1.0/me',
	                graphScopes: ['user.read.all']
	            },
	            yammer: {
	                appId: '',
	                network: 'compassion.com',
	                defaultGroupId: '12687321'
	            },
	            termSets: {
	                locationTermId: '88ed9770-2805-4c59-be2e-d8775b5aedb5',
	                globalPartnersTermId: '22689db7-16ba-423e-89fc-ebeab7b74484'
	            },
	            useCaching: false,
	            rootWeb: 'https://teganwilson.sharepoint.com/sites/compassion',
	            searchWeb: 'https://compassion.sharepoint.com/sites/search/pages/results.aspx',
	            rssProxyUrl: "https://api.rss2json.com/v1/api.json?rss_url=",
	            lists: {
	                rssFeedsListTitle: 'RSS Feeds',
	                userRssFeedsListTitle: 'User RSS Feeds',
	                userApps: 'User Tools',
	                toolbarApps: 'Toolbar Tools',
	                userBookmarks: 'User Bookmarks',
	                groupInfo: 'Group Info',
	                groupLeadership: 'Contacts',
	                navigation: 'Navigation',
	                userInfo: 'User Information List',
	                globalPartners: 'Global Partners',
	                missionPhotos: 'missionPhotos',
	                gratitudes: 'Gratitudes',
	                anniversary: 'Anniversary and Retirement',
	                newHire: 'New Hires',
	                resourceLinks: 'Resource Links'
	            }
	        });
	    }

/***/ }),
/* 2 */
/***/ (function(module, exports) {

	'use strict';

	var myApp = angular.module('compassionIntranet');

	myApp.factory('common', ['COM_CONFIG', function (COM_CONFIG) {
	    return {
	        existsInArray: function existsInArray(item, list) {
	            if (item === null || list === null) return false;
	            var item = _.find(list, function (i) {
	                return i.id == item.id;
	            });
	            return item != null;
	        },
	        existsIdInArray: function existsIdInArray(id, list) {
	            if (id === null || list === null) return false;
	            var item = _.find(list, function (i) {
	                return i.id == id;
	            });
	            return item != null;
	        },
	        getUrlParamByName: function getUrlParamByName(name) {
	            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
	            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
	            var results = regex.exec(location.search);
	            return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
	        },
	        isURL: function isURL(str) {
	            var pattern = new RegExp('^(https?:\\/\\/)?' + // protocol
	            '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.?)+[a-z]{2,}|' + // domain name
	            '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR ip (v4) address
	            '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*' + // port and path
	            '(\\?[;&a-z\\d%_.~+=-]*)?' + // query string
	            '(\\#[-a-z\\d_]*)?$', 'i'); // fragment locator
	            return pattern.test(str);
	        },
	        checkForClearStatement: function checkForClearStatement(command, storageKey) {
	            if (this.getUrlParamByName(command) == 'true') localStorage.removeItem(storageKey);
	        },
	        createGuid: function createGuid() {
	            return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, function (c) {
	                return (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16);
	            });
	        }
	        /*
	        isLocalStorageSupported: function () {
	            Modernizr.addTest('localstorage', function () {
	                var mod = 'modernizr';
	                try {
	                    localStorage.setItem(mod, mod);
	                    localStorage.removeItem(mod);
	                    return true;
	                } catch (e) {
	                    return false;
	                }
	            });
	        }
	        */
	    };
	}]);

/***/ }),
/* 3 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('anniversaryService', ['$http', '$q', 'COM_CONFIG', 'common', function ($http, $q, COM_CONFIG, common) {
	    var ctrl = this;

	    // ensure Promise for pnp is loaded prior to using pnp module
	    ES6Promise.polyfill();

	    ctrl.getAnniversary = function () {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.anniversary).items.get().then(function (data) {
	            var links = [];
	            var promises = [];
	            var items = data;
	            for (var i = 0; i < items.length; i++) {
	                var item = items[i];
	                var g = {};
	                g.contact = item.COM_Contact;
	                g.date = item.COM_EventDate;
	                links.push(g);
	            }
	            defer.resolve(links);
	        });

	        return defer.promise;
	    };
	}]);

/***/ }),
/* 4 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('appService', ['$http', '$q', 'COM_CONFIG', 'storage', 'common', function ($http, $q, COM_CONFIG, storage, common) {
	    var ctrl = this;
	    var userAppsKey = 'F6FC1D32-0D5B-4FA3-A283-4F0839B34FF8' + _spPageContextInfo.userId;

	    // clear local storage if url param is detected
	    common.checkForClearStatement('clearMyApps', userAppsKey);
	    // ensure Promise for pnp is loaded prior to using pnp module
	    ES6Promise.polyfill();

	    // set default expiration at 24 hours
	    ctrl.expirationDuration = 24;
	    ctrl.getMyApps = function (userId) {
	        var defer = $q.defer();
	        getUserAppItems(userId).then(function (apps) {
	            defer.resolve(apps);
	        });
	        return defer.promise;
	    };
	    ctrl.getAllApps = function () {
	        var defer = $q.defer();
	        getApps().then(function (apps) {
	            defer.resolve(apps);
	        });
	        return defer.promise;
	    };
	    ctrl.addMyApp = function (userId, appId) {
	        var defer = $q.defer();
	        addUserApp(userId, appId).then(function (apps) {
	            storage.remove(userAppsKey);
	            defer.resolve(apps);
	        });
	        return defer.promise;
	    };
	    ctrl.updateUserApp = function (userApp) {
	        var defer = $q.defer();
	        updateUserApp(userApp).then(function (data) {
	            storage.remove(userAppsKey);
	            defer.resolve(data);
	        });
	        return defer.promise;
	    };
	    ctrl.removeMyApp = function (id) {
	        var defer = $q.defer();
	        deleteUserApp(id).then(function (apps) {
	            storage.remove(userAppsKey);
	            defer.resolve(apps);
	        });
	        return defer.promise;
	    };
	    function getUserAppItems(userId) {
	        var defer = $q.defer();
	        var local = storage.get(userAppsKey);
	        if (local == null) {
	            local = {};
	            local.isExpired = true;
	        }
	        if (!local.isExpired) defer.resolve(local);else {
	            var web = new $pnp.Web(COM_CONFIG.rootWeb);
	            web.lists.getByTitle(COM_CONFIG.lists.userApps).items.filter("COM_ToolbarUser eq '" + userId + "'").get().then(function (data) {
	                var promises = new Array();
	                for (var i = 0; data.length > i; i++) {
	                    var p = getUserApp(data[i]);
	                    promises.push(p);
	                }
	                $q.all(promises).then(function (response) {
	                    response = formatAppApps(response);
	                    storage.set(userAppsKey, response, 0);
	                    defer.resolve(response);
	                });
	            });
	        }

	        return defer.promise;
	    }
	    function getUserApp(userApp) {
	        var defer = $q.defer();
	        getApp(userApp.COM_UserToolbarId).then(function (t) {
	            t.appId = t.id;
	            t.id = userApp.Id;
	            t.sortOrder = userApp.COM_ListSortOrder;
	            defer.resolve(t);
	        });
	        return defer.promise;
	    }
	    function getApp(appId) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.toolbarApps).items.getById(appId).get().then(function (item) {
	            var f = {};
	            f.id = item.Id;
	            f.title = item.Title;
	            f.url = item.COM_ToolbarUrl.Url;
	            f.iconUrl = item.COM_ToolbarIconUrl.Url;
	            f.sortOrder = item.COM_ListSortOrder;
	            defer.resolve(f);
	        });

	        return defer.promise;
	    }
	    function getApps() {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.toolbarApps).items.get().then(function (items) {
	            var apps = [];
	            for (var i = 0; items.length > i; i++) {
	                var item = items[i];
	                var t = {};
	                t.id = item.Id;
	                t.title = item.Title;
	                t.url = item.COM_ToolbarUrl.Url;
	                t.iconUrl = item.COM_ToolbarIconUrl.Url;
	                t.sortOrder = item.COM_ListSortOrder;

	                apps.push(t);
	            }
	            defer.resolve(apps);
	        });

	        return defer.promise;
	    }
	    function addUserApp(userId, appId) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.userApps).items.add({
	            COM_ToolbarUserId: userId,
	            COM_UserToolbarId: appId
	        }).then(function (item) {
	            defer.resolve(item.Id);
	        });

	        return defer.promise;
	    }
	    function updateUserApp(userApp) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        $pnp.sp.web.lists.getByTitle(COM_CONFIG.lists.userApps).items.getById(userApp.id).update({
	            COM_ListSortOrder: userApp.sortOrder
	        }).then(function (r) {
	            defer.resolve(r);
	        });
	        return defer.promise;
	    }
	    function deleteUserApp(userAppId) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.userApps).items.getById(userAppId).delete().then(function (item) {
	            defer.resolve(true);
	        });

	        return defer.promise;
	    }

	    function formatAppApps(apps) {
	        var nullSortOrder = _.findIndex(apps, function (a) {
	            return a.sortOrder == null;
	        }) != -1;
	        for (var i = 0; i < apps.length; i++) {
	            var app = apps[i];

	            if (app.sortOrder == null) {
	                nullSortOrder = true;
	                apps[i].sortOrder = i + 1;
	            } else if (nullSortOrder) apps[i].sortOrder = i + 1;
	        }
	        var response = _.sortBy(apps, 'sortOrder');
	        if (response == null || response.length == 0) return response;
	        if (response[0].sortOrder != 1) {
	            for (var i = 0; i < response.length; i++) {
	                response[i].sortOrder = i + 1;
	            }
	        }
	        return response;
	    }
	}]);

/***/ }),
/* 5 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('bookmarkService', ['$http', '$q', 'COM_CONFIG', 'storage', 'common', function ($http, $q, COM_CONFIG, storage, common) {
	    var ctrl = this;
	    var userBookmarkKey = 'E5A445DB-8D84-4DC5-AFE4-779DCC86AED6' + _spPageContextInfo.userId;

	    // clear local storage if url param is detected
	    checkForClearStatement();
	    // ensure Promise for pnp is loaded prior to using pnp module
	    ES6Promise.polyfill();

	    // set default expiration at 24 hours
	    ctrl.expirationDuration = 24;
	    ctrl.getMyBookmarks = function (userId) {
	        var defer = $q.defer();
	        getUserBookmarkItems(userId).then(function (bookmarks) {
	            var bks = [];
	            for (var i = 0; i < bookmarks.length; i++) {
	                var b = bookmarks[i];
	                var bk = {};
	                bk.id = b.Id;
	                bk.title = b.Title;
	                bk.url = b.COM_BookmarkUrl;
	                bk.userId = b.COM_ToolbarUserId;
	                bks.push(bk);
	            }
	            defer.resolve(bks);
	        });
	        return defer.promise;
	    };
	    ctrl.addMyBookmark = function (userId, title, url) {
	        var defer = $q.defer();
	        addUserBookmark(userId, title, url).then(function (bookmark) {
	            storage.remove(userBookmarkKey);
	            defer.resolve(bookmark);
	        });
	        return defer.promise;
	    };
	    ctrl.updateUserBookmark = function (userTool) {
	        var defer = $q.defer();
	        updateUserTool(userTool).then(function (data) {
	            storage.remove(userBookmarkKey);
	            defer.resolve(data);
	        });
	        return defer.promise;
	    };
	    ctrl.removeMyBookmark = function (id) {
	        var defer = $q.defer();
	        deleteUserTool(id).then(function (tools) {
	            storage.remove(userBookmarkKey);
	            defer.resolve(tools);
	        });
	        return defer.promise;
	    };
	    function getUserBookmarkItems(userId) {
	        var defer = $q.defer();
	        var local = storage.get(userBookmarkKey);
	        if (local == null) {
	            local = {};
	            local.isExpired = true;
	        }
	        if (!local.isExpired) defer.resolve(local);else {
	            var web = new $pnp.Web(COM_CONFIG.rootWeb);
	            web.lists.getByTitle(COM_CONFIG.lists.userBookmarks).items.filter("COM_ToolbarUser eq '" + userId + "'").get().then(function (data) {
	                defer.resolve(data);
	            });
	        }
	        return defer.promise;
	    }
	    function addUserBookmark(userId, title, url) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.userBookmarks).items.add({
	            COM_ToolbarUserId: userId,
	            COM_BookmarkUrl: url,
	            Title: title
	        }).then(function (item) {
	            var bk = {};
	            bk.id = item.data.Id;
	            bk.title = item.data.Title;
	            bk.url = item.data.COM_BookmarkUrl;
	            bk.userId = item.data.COM_ToolbarUserId;
	            defer.resolve(bk);
	        });

	        return defer.promise;
	    }
	    function updateUserTool(userBookmark) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        $pnp.sp.web.lists.getByTitle(COM_CONFIG.lists.userBookmarks).items.getById(userBookmark.id).update({
	            COM_ToolbarUserId: userBookmark.userId,
	            COM_BookmarkUrl: userBookmark.url,
	            Title: userBookmark.title
	        }).then(function (r) {
	            defer.resolve(r);
	        });
	        return defer.promise;
	    }
	    function deleteUserTool(userBookmarkId) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.userBookmarks).items.getById(userBookmarkId).delete().then(function (item) {
	            defer.resolve(true);
	        });
	        return defer.promise;
	    }
	    function checkForClearStatement() {
	        if (common.getUrlParamByName('clearMyBookmarks') == 'true') storage.remove(userBookmarkKey);
	    }
	    function formatAppTools(apps) {
	        var nullSortOrder = _.findIndex(apps, function (a) {
	            return a.sortOrder == null;
	        }) != -1;
	        for (var i = 0; i < apps.length; i++) {
	            var app = apps[i];
	            if (app.sortOrder == null) {
	                nullSortOrder = true;
	                apps[i].sortOrder = i + 1;
	            } else if (nullSortOrder) apps[i].sortOrder = i + 1;
	        }
	        return _.sortBy(apps, 'sortOrder');
	    }
	}]);

/***/ }),
/* 6 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('departmentNewsService', function ($q, $http, userProfileService, COM_CONFIG) {
	    var getImage = function getImage(x) {

	        x = x.substring(x.indexOf('src=') + 5);
	        x = x.substring(0, x.indexOf('" '));
	        return x;
	    };

	    var setData = function setData(x) {
	        var img = x.RefinableString100;
	        if (img) {
	            x.img = getImage(img);
	        }
	        if (x.RefinableString101) {
	            x.background = x.RefinableString101.toLowerCase() + "-gradient";
	        }

	        if (x.RefinableDate01) {
	            var date1 = new Date(x.RefinableDate01);

	            x.articleDate = moment(date1).format('MMMM DD, YYYY');
	        }
	        if (x.RefinableDate03) {
	            x.OutlookEndDate = new Date(x.RefinableDate03);

	            var end = new Date(x.RefinableDate03);
	            end = moment.utc(end).utcOffset("-10:00");
	            x.endTime = moment(end).format('h:mm a');

	            var date2 = new Date(x.RefinableDate03);
	            x.eventEnd = moment(date2).format('MMMM DD, YYYY');
	        }
	        if (x.RefinableDate00) {
	            x.OutlookStartDate = new Date(x.RefinableDate00);

	            var start = new Date(x.RefinableDate00);
	            start = moment.utc(start).utcOffset("-10:00");
	            x.startTime = moment(start).format('h:mm a');

	            var date3 = new Date(x.RefinableDate00);
	            x.eventStart = moment(date3).format('MMMM DD, YYYY');
	        }

	        return x;
	    };

	    var getOfficePath = function getOfficePath(userDept) {
	        var deptPath;
	        switch (userDept) {
	            case 'Business Technology':
	                deptPath = '/bu/bt';
	                break;
	            case 'Marketing':
	                deptPath = '/bu/marketing';
	                break;
	            case 'CB':
	                deptPath = '/bu/consumerbanking';
	                break;
	            case 'Corporate Communications':
	                deptPath = '/bu/corporatecommunications';
	                break;
	            case 'Corporate Risk Management':
	                deptPath = '/bu/crm';
	                break;
	            case 'ETIM':
	                deptPath = '/bu/etim';
	                break;
	            case 'Risk Management':
	                deptPath = '/bu/crm';
	                break;
	            case 'CSCM':
	                deptPath = '/bu/cscm';
	                break;
	            case 'Finance':
	                deptPath = '/bu/finance';
	                break;
	            case 'Human Resources':
	                deptPath = '/bu/humanresources';
	                break;
	            case 'Internal Audit':
	                deptPath = '/bu/internalaudit';
	                break;
	            case 'Law':
	                deptPath = '/bu/law';
	                break;
	            case 'Legal':
	                deptPath = '/bu/law';
	            case 'Payment Services':
	                deptPath = '/bu/paymentservices';
	                break;
	            case 'Diners Club':
	                deptPath = '/bu/paymentservices/dci';
	                break;
	        }
	        var url = COM_CONFIG.rootWeb + deptPath;
	        return url;
	    };

	    var depNews = function depNews() {
	        var defer = $q.defer();
	        userProfileService.getUserDepartment().then(function (userDept) {
	            var deptUrl = getOfficePath(userDept);
	            //calc dates for filtering
	            var now = moment().format("YYYY-MM-DD");
	            var eventDate = moment(now).add(14, 'days').format("YYYY-MM-DD");
	            var articleDate = moment(now).subtract(14, 'days').format("YYYY-MM-DD");

	            //specify query variables
	            var path = " Path:" + "" + deptUrl + '/pages' + "";
	            var event = " ContentTypeId:0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF3900242457EFB8B24247815D688C526CD44D0025030FFA21BB6146AC471A3ECDC9638D*";
	            var news = " ContentTypeId:0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF3900242457EFB8B24247815D688C526CD44D0017899C3E9B390F4E9BD82B8F03AFD6E6*";
	            var eventQuery = " RefinableDate00>=" + now + " AND RefinableDate00<" + eventDate + " ";
	            var newsQuery = " RefinableDate01>" + articleDate + " AND RefinableDate01<=" + now + " ";

	            $pnp.sp.search({
	                Querytext: '' + newsQuery + 'OR' + eventQuery + '' + news + '' + event + ' ' + path + '',
	                SelectProperties: ['RefinableString104', 'RefinableString103', 'RefinableDate00', 'RefinableDate01', 'RefinableDate03', 'RefinableString14', 'RefinableString15', 'RefinableString09', 'RefinableString100', 'RefinableString13', 'Path', 'Title', 'ListItemID', 'ArticleByLineOWSTEXT', 'ContentType'],
	                TrimDuplicates: 'false',
	                RowLimit: 3,
	                SortList: [{
	                    'Property': 'RefinableDate01',
	                    'Direction': '1'
	                }]

	            }).then(function (data) {
	                if (userDept.toLowerCase() === "legal") {
	                    userDept = "Law";
	                }
	                var items = { userDepartment: userDept, departmentLink: deptUrl, results: data.PrimarySearchResults };
	                //transform returned data
	                items.results.map(setData);
	                defer.resolve(items);
	            });
	        });
	        return defer.promise;
	    };

	    this.getNews = function () {
	        return depNews();
	    };
	});

/***/ }),
/* 7 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('documentService', ['$http', '$q', 'COM_CONFIG', function ($http, $q, COM_CONFIG) {
	    function getMyDocuments(user) {
	        var defer = $q.defer();
	        $pnp.sp.search({
	            Querytext: 'Author: "' + user + '" OR ModifiedBy: "' + user + '"',
	            RowLimit: 10,
	            EnableInterleaving: true,
	            RefinementFilters: ['fileExtension:equals("txt")'],
	            SelectProperties: ['Title', 'FileDirRef', 'EncodedAbsUrl', 'Author', 'ModifiedBy']
	        }).then(function (results) {
	            console.log(results);
	        });

	        return defer.promise;
	    }

	    this.getMyDocuments = function (user) {
	        var defer = $q.defer();
	        getMyDocuments(user).then(function (results) {
	            defer.resolve(results);
	        });

	        return defer.promise;
	    };
	}]);

/***/ }),
/* 8 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('employeeAnnouncementService', ['$http', '$q', 'COM_CONFIG', 'storage', 'common', function ($http, $q, COM_CONFIG, storage, common) {
	    var ctrl = this;
	    var userBookmarkKey = '9FAD3EC1-2BF0-4B46-97B9-D868BB406DEB' + _spPageContextInfo.userId;

	    // clear local storage if url param is detected
	    checkForClearStatement();
	    // ensure Promise for pnp is loaded prior to using pnp module
	    ES6Promise.polyfill();

	    // set default expiration at 24 hours
	    ctrl.expirationDuration = 24;
	    ctrl.getMyBookmarks = function (userId) {
	        var defer = $q.defer();
	        getUserBookmarkItems(userId).then(function (bookmarks) {
	            var bks = [];
	            for (var i = 0; i < bookmarks.length; i++) {
	                var b = bookmarks[i];
	                var bk = {};
	                bk.id = b.Id;
	                bk.title = b.Title;
	                bk.url = b.COM_BookmarkUrl;
	                bk.userId = b.COM_ToolbarUserId;
	                bks.push(bk);
	            }
	            defer.resolve(bks);
	        });
	        return defer.promise;
	    };
	    ctrl.addMyBookmark = function (userId, title, url) {
	        var defer = $q.defer();
	        addUserBookmark(userId, title, url).then(function (bookmark) {
	            storage.remove(userBookmarkKey);
	            defer.resolve(bookmark);
	        });
	        return defer.promise;
	    };
	    ctrl.updateUserBookmark = function (userTool) {
	        var defer = $q.defer();
	        updateUserTool(userTool).then(function (data) {
	            storage.remove(userBookmarkKey);
	            defer.resolve(data);
	        });
	        return defer.promise;
	    };
	    ctrl.removeMyBookmark = function (id) {
	        var defer = $q.defer();
	        deleteUserTool(id).then(function (tools) {
	            storage.remove(userBookmarkKey);
	            defer.resolve(tools);
	        });
	        return defer.promise;
	    };
	    function getUserBookmarkItems(userId) {
	        var defer = $q.defer();
	        var local = storage.get(userBookmarkKey);
	        if (local == null) {
	            local = {};
	            local.isExpired = true;
	        }
	        if (!local.isExpired) defer.resolve(local);else {
	            var web = new $pnp.Web(COM_CONFIG.rootWeb);
	            web.lists.getByTitle(COM_CONFIG.lists.userBookmarks).items.filter("COM_ToolbarUser eq '" + userId + "'").get().then(function (data) {
	                defer.resolve(data);
	            });
	        }
	        return defer.promise;
	    }
	    function addUserBookmark(userId, title, url) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.userBookmarks).items.add({
	            COM_ToolbarUserId: userId,
	            COM_BookmarkUrl: url,
	            Title: title
	        }).then(function (item) {
	            var bk = {};
	            bk.id = item.data.Id;
	            bk.title = item.data.Title;
	            bk.url = item.data.COM_BookmarkUrl;
	            bk.userId = item.data.COM_ToolbarUserId;
	            defer.resolve(bk);
	        });

	        return defer.promise;
	    }
	    function updateUserTool(userBookmark) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        $pnp.sp.web.lists.getByTitle(COM_CONFIG.lists.userBookmarks).items.getById(userBookmark.id).update({
	            COM_ToolbarUserId: userBookmark.userId,
	            COM_BookmarkUrl: userBookmark.url,
	            Title: userBookmark.title
	        }).then(function (r) {
	            defer.resolve(r);
	        });
	        return defer.promise;
	    }
	    function deleteUserTool(userBookmarkId) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.userBookmarks).items.getById(userBookmarkId).delete().then(function (item) {
	            defer.resolve(true);
	        });
	        return defer.promise;
	    }
	    function checkForClearStatement() {
	        if (common.getUrlParamByName('clearMyBookmarks') == 'true') storage.remove(userBookmarkKey);
	    }
	    function formatAppTools(apps) {
	        var nullSortOrder = _.findIndex(apps, function (a) {
	            return a.sortOrder == null;
	        }) != -1;
	        for (var i = 0; i < apps.length; i++) {
	            var app = apps[i];
	            if (app.sortOrder == null) {
	                nullSortOrder = true;
	                apps[i].sortOrder = i + 1;
	            } else if (nullSortOrder) apps[i].sortOrder = i + 1;
	        }
	        return _.sortBy(apps, 'sortOrder');
	    }
	}]);

/***/ }),
/* 9 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('employeeSpotlightService', ['$http', '$q', 'COM_CONFIG', 'common', function ($http, $q, COM_CONFIG, common) {
	    var ctrl = this;

	    // ensure Promise for pnp is loaded prior to using pnp module
	    ES6Promise.polyfill();

	    ctrl.getGratitudes = function () {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.gratitudes).items.get().then(function (data) {
	            var links = [];
	            var promises = [];
	            var items = data;
	            for (var i = 0; i < items.length; i++) {
	                var item = items[i];
	                var g = {};
	                g.type = item.COM_GratitudeType;
	                g.contact = item.COM_Contact;
	                g.submitted = item.CreatedBy;
	                g.description = item.COM_GratitudeDescription;
	                links.push(g);
	            }
	            defer.resolve(links);
	        });

	        return defer.promise;
	    };
	}]);

/***/ }),
/* 10 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('globalPartnerService', ['$http', '$q', 'COM_CONFIG', 'storage', 'common', function ($http, $q, COM_CONFIG, storage, common) {
	    var ctrl = this;
	    var globalPartnerKey = 'DB61A9E9-6805-4388-8271-4C2F8BB48EF9';

	    // clear local storage if url param is detected
	    common.checkForClearStatement('clearGlobalPartners', globalPartnerKey);
	    // ensure Promise for pnp is loaded prior to using pnp module
	    ES6Promise.polyfill();

	    // set default expiration at 0 hours
	    ctrl.expirationDuration = 0;
	    ctrl.getGlobalPartners = function () {
	        var defer = $q.defer();
	        getGlobalPartners().then(function (partners) {
	            defer.resolve(partners);
	        });
	        return defer.promise;
	    };
	    function getGlobalPartners() {
	        var defer = $q.defer();
	        var local = storage.get(globalPartnerKey);
	        if (local == null) {
	            local = {};
	            local.isExpired = true;
	        }
	        if (!local.isExpired) defer.resolve(local);else {
	            var web = new $pnp.Web(COM_CONFIG.rootWeb);
	            web.lists.getByTitle(COM_CONFIG.lists.globalPartners).items.get().then(function (data) {
	                var partners = data;
	                var response = [];
	                for (var i = 0; i < partners.length; i++) {
	                    var d = partners[i];
	                    var p = {};
	                    p.title = d.Title;
	                    p.iconUrl = d.COM_ToolbarIconUrl != null ? d.COM_ToolbarIconUrl.Url : '';
	                    p.siteUrl = d.COM_LinkUrl != null ? d.COM_LinkUrl.Url : '';
	                    response.push(p);
	                }
	                defer.resolve(response);
	            });
	        }

	        return defer.promise;
	    }
	}]);

/***/ }),
/* 11 */
/***/ (function(module, exports) {

	/* 
	*  Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. 
	*  See LICENSE in the source repository root for complete license information. 
	*/

	"use strict";

	(function () {
	    angular.module('compassionIntranet').service('graphService', ['$http', '$q', 'COM_CONFIG', 'common', function ($http, $q, COM_CONFIG, common) {
	        var ctrl = this;
	        var clientApplication;
	        var myDocuments = 'https://graph.microsoft.com/v1.0/me/drive/recent',
	            myPeople = 'https://graph.microsoft.com/beta/me/people',
	            users = 'https://graph.microsoft.com/v1.0/users/',
	            userPic = '/photo/$value',
	            me = 'https://graph.microsoft.com/v1.0/me';
	        // Initialize the auth request
	        clientApplication = createApplication(COM_CONFIG.msGraph.appId);
	        clientApplication.redirectUri = COM_CONFIG.msGraph.redirectUri;

	        ctrl.isAuthenticated = isAuthenticated;
	        ctrl.getMyPeople = function () {
	            var defer = $q.defer();
	            if (!ctrl.isAuthenticated()) {
	                login();
	            }

	            var bearer = 'Bearer ' + localStorage.token;
	            var request = {
	                method: 'GET',
	                url: myPeople,
	                headers: {
	                    'Access-Control-Allow-Origin': true,
	                    'Access-Control-Allow-Credentials': true,
	                    'Authorization': bearer
	                }
	            };
	            $http(request).then(function (data) {
	                var ppl = data.data.value;
	                var response = [];
	                var promises = [];

	                for (var i = 0; i < ppl.length; i++) {
	                    var person = ppl[i];
	                    var p = {
	                        displayName: person.displayName,
	                        group: person.department,
	                        title: person.title,
	                        location: person.officeLocation,
	                        phone: person.phones.length > 0 ? person.phones[0].number : '',
	                        userPrincipalName: person.userPrincipalName,
	                        picUrl: "/_layouts/15/userphoto.aspx?size=S&accountname=" + person.userPrincipalName,
	                        logo: COM_CONFIG.rootWeb + '/_catalogs/masterpage/Compassion/images/shape.png'
	                    };
	                    response.push(p);
	                }
	                defer.resolve(response);
	            }).catch(function (data) {
	                if (COM_CONFIG.isProduction) {
	                    defer.reject(data);
	                } else {
	                    var p = getMockData();
	                    defer.resolve(p);
	                }
	            });
	            return defer.promise;
	        };
	        ctrl.searchMyUsers = function (queryText) {
	            var defer = $q.defer();
	            if (!ctrl.isAuthenticated()) {
	                login();
	            }

	            var bearer = 'Bearer ' + localStorage.token;
	            var request = {
	                method: 'GET',
	                url: myPeople + '?$search=' + queryText,
	                headers: {
	                    'Access-Control-Allow-Origin': true,
	                    'Access-Control-Allow-Credentials': true,
	                    'Authorization': bearer
	                }
	            };
	            $http(request).then(function (data) {
	                var ppl = data.data.value;
	                var response = [];
	                var promises = [];

	                for (var i = 0; i < ppl.length; i++) {
	                    var person = ppl[i];
	                    var p = {
	                        displayName: person.displayName,
	                        group: person.department,
	                        title: person.title,
	                        location: person.officeLocation,
	                        phone: person.phones.length > 0 ? person.phones[0].number : '',
	                        userPrincipalName: person.userPrincipalName,
	                        picUrl: '/_layouts/15/userphoto.aspx?size=S&accountname=' + person.userPrincipalName,
	                        logo: COM_CONFIG.rootWeb + '/_catalogs/masterpage/Compassion/images/shape.png'
	                    };
	                    response.push(p);
	                }
	                defer.resolve(response);
	            }).catch(function (data) {
	                defer.reject(data);
	                console.log(JSON.stringify(data));
	            });
	            return defer.promise;
	        };
	        function createApplication(applicationConfig) {
	            var clientApplication = new Msal.UserAgentApplication(applicationConfig, null, function (errorDesc, token, error, tokenType) {
	                // Called after loginRedirect or acquireTokenPopup
	            });
	            return clientApplication;
	        }
	        function isAuthenticated() {
	            return clientApplication.getAllUsers().length !== 0;
	        }
	        function login() {
	            return;
	            clientApplication.loginPopup(COM_CONFIG.msGraph.graphScopes).then(function (idToken) {
	                localStorage.user = JSON.stringify(clientApplication.getUser());
	                clientApplication.acquireTokenSilent(COM_CONFIG.msGraph.graphScopes).then(function (accessToken) {
	                    localStorage.token = accessToken;
	                }, function (error) {
	                    clientApplication.acquireTokenPopup(COM_CONFIG.msGraph.graphScopes).then(function (accessToken) {
	                        localStorage.token = accessToken;
	                    }, function (error) {
	                        window.alert("Error acquiring the popup:\n" + error);
	                    });
	                });
	            }, function (error) {
	                window.alert("Error during login:\n" + error);
	            });
	        }
	        function getToken() {
	            clientApplication.acquireTokenSilent(COM_CONFIG.msGraph.graphScopes).then(function (accessToken) {
	                localStorage.token = accessToken;
	                //window.location.reload();
	            }, function (error) {
	                clientApplication.acquireTokenPopup(COM_CONFIG.msGraph.graphScopes).then(function (accessToken) {
	                    localStorage.token = accessToken;
	                }, function (error) {
	                    window.alert("Error acquiring the popup:\n" + error);
	                });
	            });
	        }
	        function getMockData() {
	            var response = [];
	            var p = {
	                displayName: 'Mock Data',
	                group: 'Mock Department',
	                title: 'Mock Director',
	                location: 'Mock Location, CO',
	                phone: '555-555-5555',
	                userPrincipalName: 'stonkin@us.ci.org',
	                picUrl: '/_layouts/15/userphoto.aspx?size=S&accountname=stonkin@us.ci.org',
	                logo: COM_CONFIG.rootWeb + '/_catalogs/masterpage/Compassion/images/shape.png'
	            };

	            for (var i = 0; i < 17; i++) {
	                var p1 = angular.copy(p);
	                p1.displayName = p.displayName + ' ' + i;
	                p1.userPrincipalName = p.userPrincipalName + i;
	                p1.id = common.createGuid();
	                response.push(p1);
	            }
	            return response;
	        }
	    }]);
	})();

	/*'use strict';
	angular.module('compassionIntranet').service('graphService', ['$http', '$q', 'adalAuthenticationService', 'COM_CONFIG', 'storage', 'common', function ($http, $q, adalAuthenticationService, COM_CONFIG, storage, common) {
	    var ctrl = this;
	    var adalAuthContext = new AuthenticationContext(adalAuthenticationService.config);
	    var myDocuments = 'https://graph.microsoft.com/v1.0/me/drive/recent',
	        myPeople = 'https://graph.microsoft.com/beta/me/people',
	        users = 'https://graph.microsoft.com/v1.0/users/',
	        userPic = '/photo/$value';


	    ctrl.getMyPeople = function () {
	        var defer = $q.defer();
	        if (!adalAuthenticationService.userInfo.isAuthenticated) {
	            loginComponent();
	        }
	        var request = {
	            method: 'GET',
	            url: myPeople,
	            header: {
	                'Access-Control-Allow-Origin': true,
	                'Access-Control-Allow-Credentials': true
	            }
	        };
	        $http(request)
	        .then(function (data) {
	            var ppl = data.data.value;
	            var response = [];
	            var promises = [];

	            
	            for (var i = 0; i < ppl.length; i++) {
	                var person = ppl[i];
	                var p = {
	                    displayName: person.displayName,
	                    group: person.department,
	                    title: person.title,
	                    location: person.officeLocation,
	                    phone: (person.phones.length > 0 ? person.phones[0].number : ''),
	                    userPrincipalName: person.userPrincipalName
	                };
	                response.push(p);
	                promises.push(getMyPicture(person.userPrincipalName));
	            }
	            $q.all(promises).then(function (response) {
	                defer.resolve(response);
	                console.log(response);
	            }).catch(function (data) {
	                defer.resolve(response);
	                console.log("Couldn't get my people: " + JSON.stringify(data));
	            });
	        })
	        .catch(function (data) {
	            defer.reject(data);
	            console.log(JSON.stringify(data));
	        });
	        return defer.promise;
	    };
	    ctrl.getMyDocuments = function () {

	        if (!adalAuthenticationService.userInfo.isAuthenticated) {
	            loginComponent();
	        }
	        var request = {
	            method: 'GET',
	            url: myDocuments,
	            header: {
	                'Access-Control-Allow-Origin': true,
	                'Access-Control-Allow-Credentials': true
	            }
	        };
	        $http(request)
	        .then(function (data) {
	            console.log(data);
	            console.log("Got the data");
	        })
	        .catch(function (data) {
	            console.log(JSON.stringify(data));
	        });
	    };
	    function loginComponent() {
	        var isCallback = adalAuthContext.isCallback(window.location.hash);
	        if (isCallback && !adalAuthContext.getLoginError()) {
	            adalAuthContext.handleWindowCallback();
	        }
	        else {
	            var user = adalAuthContext.getCachedUser();
	            var token = adalAuthContext.getCachedToken();
	            if (!token) {
	                /*
	                authContext.acquireToken(adalAuthContext.config.loginResource, function (error, token) {
	                    if (error || !token) {
	                        console.log("ADAL error occurred: " + error);
	                    }
	                    console.log("got the token.. resolving tokendefer");
	                    window.accessToken = token;
	                    window.tokenDefer.resolve(token);
	                });
	                
	                adalAuthContext.handleWindowCallback();
	                var resource = adalAuthContext.getResourceForEndpoint('https://graph.microsoft.com/v1.0/users/me@teganwilson.onmicrosoft.com/me');
	                var t = adalAuthContext.getCachedToken(resource);
	                console.log(t);
	            }
	            if (!user) {
	                //Log in user
	                adalAuthContext.login();
	            }
	        }
	    }    
	    function getMyPicture(userName) {
	        var defer = $q.defer();
	        var request = {
	            method: 'GET',
	            url: users + userName + userPic,
	            header: {
	                'Access-Control-Allow-Origin': true,
	                'Access-Control-Allow-Credentials': true
	            }
	        };
	        $http(request)
	        .then(function (data) {
	            defer.resolve(data);
	            console.log(data);
	            console.log("Got the picture");
	        })
	        .catch(function (data) {
	            defer.reject(data);
	            console.log(JSON.stringify(data));
	            console.log("Couldn't get the data");
	        });
	        return defer.promise;
	    }
	}]);
	*/

/***/ }),
/* 12 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('gratitudesService', ['$http', '$q', 'COM_CONFIG', 'common', function ($http, $q, COM_CONFIG, common) {
	    var ctrl = this;

	    // ensure Promise for pnp is loaded prior to using pnp module
	    ES6Promise.polyfill();

	    ctrl.getGratitudes = function () {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.gratitudes).items.get().then(function (data) {
	            var links = [];
	            var promises = [];
	            var items = data;
	            for (var i = 0; i < items.length; i++) {
	                var item = items[i];
	                var g = {};
	                g.type = item.COM_GratitudeType;
	                g.contact = item.COM_Contact;
	                g.submitted = item.CreatedBy;
	                g.description = item.COM_GratitudeDescription;
	                links.push(g);
	            }
	            defer.resolve(links);
	        });

	        return defer.promise;
	    };
	}]);

/***/ }),
/* 13 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('groupService', ['$http', '$q', 'COM_CONFIG', 'common', 'storage', function ($http, $q, COM_CONFIG, common, storage) {
	    var ctrl = this;
	    var groupsKey = '4FC856F1-CCF7-49C8-9971-22861DE3EB56' + _spPageContextInfo.userId;

	    var delveUrl = '';
	    // clear local storage if url param is detected
	    common.checkForClearStatement('clearGroups', groupsKey);
	    // ensure Promise for pnp is loaded prior to using pnp module
	    ES6Promise.polyfill();

	    // set default expiration at 24 hours
	    ctrl.expirationDuration = 24;
	    ctrl.getGroups = function () {
	        var defer = $q.defer();
	        var local = storage.get(groupsKey);
	        if (local == null) {
	            local = {};
	            local.isExpired = true;
	        }
	        if (!local.isExpired) defer.resolve(local);else {
	            defer.resolve(getGroups());
	        }

	        return defer.promise;
	    };
	    function getGroups() {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.groupInfo).items.get().then(function (data) {
	            var groups = [];
	            var promises = [];
	            var items = data;
	            for (var i = 0; i < items.length; i++) {
	                var item = items[i];
	                var g = {};
	                g.id = item.Id;
	                g.name = item.Title;
	                g.url = item.COM_GroupSiteUrl.Url;
	                g.description = item.COM_GroupDescription;
	                g.profileUrl = delveUrl;
	                groups.push(g);
	                promises.push(getGroupLeadership(g.url, item.Id));
	            }
	            try {
	                $q.all(promises).then(function (response) {
	                    for (var i = 0; i < groups.length; i++) {
	                        var id = groups[i].id;
	                        groups[i].leaders = _.find(response, function (l) {
	                            return l.groupId == id;
	                        }).leaders;
	                    }

	                    storage.set(groupsKey, groups, 0);
	                    defer.resolve(groups);
	                });
	            } catch (e) {
	                defer.resolve(groups);
	            }
	        });

	        return defer.promise;
	    }
	    function getGroupLeadership(siteUrl, groupId) {
	        var defer = $q.defer();
	        var picUrlTemplate = '/_layouts/15/userphoto.aspx?size=S&username=';
	        var web = new $pnp.Web(siteUrl);
	        web.lists.getByTitle(COM_CONFIG.lists.groupLeadership).items.select('Title', 'COM_Contact/Title', 'COM_Contact/UserName', 'COM_Contact/JobTitle').expand('COM_Contact').get().then(function (data) {
	            var leaders = [];
	            var groupLeaders = [];
	            var groupLeader = {};
	            groupLeader.groupId = groupId;

	            var items = data;
	            for (var i = 0; i < items.length; i++) {
	                var leader = items[i];
	                var person = leader.COM_Contact;
	                var l = {};
	                l.name = person.Title;
	                l.title = person.JobTitle;
	                l.picUrl = _spPageContextInfo.siteAbsoluteUrl + picUrlTemplate + person.UserName;
	                leaders.push(l);
	            }
	            groupLeader.leaders = leaders;
	            defer.resolve(groupLeader);
	        });

	        return defer.promise;
	    }
	}]);

/***/ }),
/* 14 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('howDoIService', ['$http', '$q', 'COM_CONFIG', 'common', 'storage', function ($http, $q, COM_CONFIG, common, storage) {
	    var ctrl = this;
	    ctrl.howDoi = function () {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.resourceLinks).items.get().then(function (data) {
	            var links = [];
	            var promises = [];
	            var items = data;
	            for (var i = 0; i < items.length; i++) {
	                var item = items[i];
	                var g = {};
	                g.id = item.Id;
	                g.name = item.Title;
	                g.url = item.Url.Url;
	                response.push(p);
	            }
	            defer.resolve(response);
	        });

	        return defer.promise;
	    };
	}]);

/***/ }),
/* 15 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('missionPhotoService', ['$http', '$q', 'COM_CONFIG', 'common', function ($http, $q, COM_CONFIG, common) {
	    var ctrl = this;

	    // ensure Promise for pnp is loaded prior to using pnp module
	    ES6Promise.polyfill();

	    ctrl.getMissionPhotos = function () {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.missionPhotos).items.get().then(function (data) {
	            var photo = data;
	            var response = [];
	            for (var i = 0; i < photo.length; i++) {
	                var d = photo[i];
	                var p = {};
	                p.thumbnail = d.Thumbnail;
	                p.caption = d.COM_PhotoCaption;
	                response.push(p);
	            }
	            defer.resolve(response);
	        });

	        return defer.promise;
	    };
	}]);

/***/ }),
/* 16 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').factory('modalService', Service);

	function Service() {
	    var modals = []; // array of modals on the page
	    var service = {};

	    service.Add = Add;
	    service.Remove = Remove;
	    service.Open = Open;
	    service.Close = Close;

	    return service;

	    function Add(modal) {
	        // add modal to array of active modals
	        modals.push(modal);
	    }

	    function Remove(id) {
	        // remove modal from array of active modals
	        var modalToRemove = _.findWhere(modals, { id: id });
	        modals = _.without(modals, modalToRemove);
	    }

	    function Open(id) {
	        // open modal specified by id
	        var modal = _.findWhere(modals, { id: id });
	        modal.open();
	    }

	    function Close(id) {
	        // close modal specified by id
	        var modal = _.findWhere(modals, { id: id });
	        modal.close();
	    }
	}

/***/ }),
/* 17 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('navigationService', ['$http', '$q', 'COM_CONFIG', 'common', 'storage', function ($http, $q, COM_CONFIG, common, storage) {
	    var ctrl = this;
	    var navKey = 'DE783DB7-A21E-4372-BB64-B193DEB85CD3';
	    var delveUrl = '';
	    // clear local storage if url param is detected
	    common.checkForClearStatement('clearNavNodes', navKey);

	    // set default expiration at 0 hours
	    ctrl.expirationDuration = 0;
	    ctrl.getAllNodes = function () {
	        var defer = $q.defer();
	        var local = storage.get(navKey);
	        if (local == null) {
	            local = {};
	            local.isExpired = true;
	        }
	        if (!local.isExpired) defer.resolve(local);else {
	            defer.resolve(getNavigationNodes());
	        }

	        return defer.promise;
	    };
	    function getNavigationNodes() {
	        // ensure Promise for pnp is loaded prior to using pnp module
	        ES6Promise.polyfill();
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.navigation).items.get().then(function (data) {
	            var nodes = [];
	            for (var i = 0; i < data.length; i++) {
	                var node = {};
	                var n = data[i];
	                node.url = n.COM_NavNodeUrl.Url;
	                node.title = n.Title;
	                nodes.push(node);
	            }
	            storage.set(navKey, nodes, 0);
	            defer.resolve(nodes);
	        });

	        return defer.promise;
	    }
	}]);

/***/ }),
/* 18 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('newHireService', ['$http', '$q', 'COM_CONFIG', 'common', function ($http, $q, COM_CONFIG, common) {
	    var ctrl = this;

	    // ensure Promise for pnp is loaded prior to using pnp module
	    ES6Promise.polyfill();

	    ctrl.getHire = function () {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.newHire).items.get().then(function (data) {
	            var links = [];
	            var promises = [];
	            var items = data;
	            for (var i = 0; i < items.length; i++) {
	                var item = items[i];
	                var g = {};
	                g.contact = item.COM_Contact;
	                g.date = item.CreatedBy;
	            }
	            defer.resolve(response);
	        });

	        return defer.promise;
	    };
	}]);

/***/ }),
/* 19 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('newsService', ['$q', '$http', 'COM_CONFIG', function ($q, $http, COM_CONFIG) {

	    this.getLandingNews = function (location, category, queryTerm, startrow) {
	        var deferred = $q.defer();
	        //var start = startrow ? startrow : 0;
	        var queryText = queryTerm + ' Path:"' + bones.web.url + '/pages" ContentType:"News Page"';
	        //var queryText = queryTerm + ' ContentType:"News Article"';
	        if (location) {
	            if (location !== "All") {
	                queryText += ' RefinableString03:"' + location + '"';
	            } else {
	                //Look for All or null
	                queryText += ' (RefinableString03:"' + location + '" OR RefinableString03:"")';
	            }
	        }
	        if (category) {
	            queryText += ' RefinableString15:"' + category + '"';
	        }
	        $pnp.sp.search({
	            Querytext: queryText,
	            SelectProperties: ['RefinableDate01', 'RefinableString00', 'RefinableString01', 'RefinableString02', 'RefinableString04', 'RefinableString06', 'RefinableString07', 'RefinableString12', 'RefinableString15', 'Path', 'PublishingImage', 'SiteTitle', 'Title', 'ListItemID'],
	            Refiners: 'RefinableString15,RefinableString03',
	            SortList: [{
	                'Property': 'RefinableDate01',
	                'Direction': '1'
	            }],
	            StartRow: startrow
	        }).then(function (response) {

	            response.PrimarySearchResults.map(function (item) {
	                if (item.PublishingImage) {
	                    item.ImageUrl = getImage(item.PublishingImage);
	                }
	                if (item.RefinableDate01) {

	                    var artDate = new Date(item.RefinableDate01);
	                    item.ArticleDate = moment(artDate).format('MMMM D, YYYY');
	                }
	            });
	            deferred.resolve(response);
	        });
	        return deferred.promise;
	    };
	}]);

/***/ }),
/* 20 */
/***/ (function(module, exports) {

	'use strict';

	var myApp = angular.module('compassionIntranet');
	myApp.service('relatedDocService', function ($q, $http, COM_CONFIG) {

	    var document = function document(_document) {
	        var x = _document.ContentType;
	        if (x.indexOf('Document') > 0) {
	            //set base document content type
	            contentType = " ContentTypeId:0x0101295D73ACDB7A4BAEBE6E712640858F91* ";
	        }

	        var defer = $q.defer();

	        $pnp.sp.search({
	            Querytext: '' + contentType + 'AND' + category + ' ',
	            SelectProperties: ['RefinableString1', 'RefinableString00', 'RefinableDate00', 'RefinableDate01', 'RefinableDate02', 'Path', 'Title', 'ArticleByLineOWSTEXT', 'ContentType'],
	            TrimDuplicates: 'false',
	            RowLimit: 3,
	            SortList: [{
	                'Property': 'RefinableDate01',
	                'Direction': '1'
	            }]

	        }).then(function (data) {

	            var items = data.PrimarySearchResults;
	            items = items.filter(function (item) {
	                //filter out current document
	                var documentTitle = _document.Title;
	                if (documentTitle != item.Title) return item;
	            });
	            //create array of objects
	            items = items.map(createObject);

	            defer.resolve(items);
	        });
	        return defer.promise;
	    };

	    var getDocument = function getDocument() {

	        var defer = $q.defer();

	        var documentTitle = $(".title").text();
	        $pnp.sp.search({
	            Querytext: 'Title= "' + documentTitle + '" ' + path + '',
	            SelectProperties: ['RefinableString10', 'RefinableString09', 'RefinableString100', 'RefinableString13', 'Path', 'Title', 'ArticleByLineOWSTEXT', 'ContentType'],
	            TrimDuplicates: 'false',
	            RowLimit: 3,
	            SortList: [{
	                'Property': 'RefinableDate01',
	                'Direction': '0'
	            }]

	        }).then(function (data) {

	            var items = data.PrimarySearchResults[0];
	            if (items.RefinableString15) {

	                items.COM_DocumentType = items.RefinableString15;
	            }

	            defer.resolve(items);
	        });

	        return defer.promise;
	    };

	    this.getData = function () {

	        var defer = $q.defer();
	        getPage().then(function (page) {
	            depNews(page).then(function (items) {

	                defer.resolve(items);
	            });
	        });
	        return defer.promise;
	    };
	});

/***/ }),
/* 21 */
/***/ (function(module, exports) {

	'use strict';

	var myApp = angular.module('compassionIntranet');
	myApp.service('relatedNewsService', function ($q, $http, COM_CONFIG) {

	    var depNews = function depNews(page) {
	        var eventQuery = "";
	        var contentType = "";
	        var category = "";
	        var x = page.ContentType;
	        if (x.indexOf('Article') > 0) {
	            //set news content type
	            contentType = " ContentTypeId:0x010100C568DB52D9D0A14D9B2FDCC96666E9F2007948130EC3DB064584E219954237AF3900242457EFB8B24247815D688C526CD44D0017899C3E9B390F4E9BD82B8F03AFD6E6* ";
	            category = " RefinableString15: '" + page.newsCategory + "'";
	        }

	        //specify query variables
	        var rootNews = " Path:" + _spPageContextInfo.siteAbsoluteUrl + "/news";

	        var defer = $q.defer();

	        $pnp.sp.search({
	            Querytext: '' + contentType + 'AND' + category + ' ' + rootNews + '',
	            SelectProperties: ['RefinableString1', 'RefinableString00', 'RefinableDate00', 'RefinableDate01', 'RefinableDate02', 'Path', 'Title', 'ArticleByLineOWSTEXT', 'ContentType'],
	            TrimDuplicates: 'false',
	            RowLimit: 3,
	            SortList: [{
	                'Property': 'RefinableDate01',
	                'Direction': '1'
	            }]

	        }).then(function (data) {

	            var items = data.PrimarySearchResults;
	            items = items.filter(function (item) {
	                //filter out current page
	                var pageTitle = page.Title;
	                if (pageTitle != item.Title) return item;
	            });
	            //create array of objects
	            items = items.map(createObject);

	            defer.resolve(items);
	        });
	        return defer.promise;
	    };

	    var getPage = function getPage() {

	        var defer = $q.defer();

	        var pageTitle = $(".page-title").text();
	        var rootNews = _spPageContextInfo.siteAbsoluteUrl + "/news";
	        var path = " Path:" + "" + rootNews + "";
	        $pnp.sp.search({
	            Querytext: 'Title= "' + pageTitle + '" ' + path + '',
	            SelectProperties: ['RefinableString10', 'RefinableString09', 'RefinableString100', 'RefinableString13', 'Path', 'Title', 'ArticleByLineOWSTEXT', 'ContentType'],
	            TrimDuplicates: 'false',
	            RowLimit: 3,
	            SortList: [{
	                'Property': 'RefinableDate01',
	                'Direction': '0'
	            }]

	        }).then(function (data) {

	            var items = data.PrimarySearchResults[0];
	            if (items.RefinableString15) {

	                items.newsCategory = items.RefinableString15;
	            }

	            defer.resolve(items);
	        });

	        return defer.promise;
	    };

	    this.getData = function () {

	        var defer = $q.defer();
	        getPage().then(function (page) {
	            depNews(page).then(function (items) {

	                defer.resolve(items);
	            });
	        });
	        return defer.promise;
	    };
	});

/***/ }),
/* 22 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('rssFeedService', ['$http', '$q', 'COM_CONFIG', function ($http, $q, COM_CONFIG) {
	    function getRssItems(user) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.userRssFeedsListTitle).items.filter("COM_RssFeedUserId eq '" + user + "'").get().then(function (data) {
	            var promises = new Array();
	            for (var i = 0; data.length > i; i++) {
	                var p = getRssUrl(data[i]);
	                promises.push(p);
	            }
	            $q.all(promises).then(function (response) {
	                defer.resolve(response);
	            });
	        });

	        return defer.promise;
	    }
	    function getRssUrl(feed) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.rssFeedsListTitle).items.getById(feed.COM_RssFeedId).get().then(function (item) {
	            var f = {};
	            f.title = item.Title;
	            f.url = item.COM_RssFeedUrl.Url;
	            f.feedId = item.Id;
	            f.id = feed.Id;
	            defer.resolve(f);
	        });

	        return defer.promise;
	    }
	    function getAllRssFeeds() {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.rssFeedsListTitle).items.get().then(function (items) {
	            var feeds = [];
	            for (var i = 0; i < items.length; i++) {
	                var item = items[i];
	                var f = {};
	                f.id = item.Id;
	                f.title = item.Title;
	                f.url = item.COM_RssFeedUrl.Url;
	                feeds.push(f);
	            }
	            defer.resolve(feeds);
	        });

	        return defer.promise;
	    }
	    function getRssFeeds(feeds) {
	        var defer = $q.defer(),
	            promises = [];
	        for (var i = 0; feeds.length > i; i++) {
	            var p = getRssFeed(feeds[i]);
	            promises.push(p);
	        }
	        $q.all(promises).then(function (response) {
	            defer.resolve(response);
	        });
	        return defer.promise;
	    }
	    function getRssFeed(feed) {
	        var defer = $q.defer();

	        $http.jsonp(COM_CONFIG.rssProxyUrl + encodeURIComponent(feed.url)).then(function (response) {
	            if (!response.data) {
	                console.error('Unable to fetch RSS feed from provided URL. Please check the URL.');
	            }
	            var feeds = _.sortBy(response.data.items, function (item) {
	                return item.pubDate;
	            }).reverse();

	            for (var i = 0; i < feeds.length; ++i) {
	                var f = feeds[i];
	                f.feedId = feed.feedId;
	                f.feedTitle = feed.title;
	                f.id = feed.id;
	                f.pDate = moment().utc(f.pubDate);
	                f.publishedDate = moment(f.pubDate);
	                f.currentTime = moment.utc().format();
	                f.publishedSpanString = getPublishedDurationString(f.pubDate);
	            }

	            defer.resolve(feeds);
	        });
	        return defer.promise;
	    }
	    function getPublishedDurationString(then) {
	        var ms = moment.utc().diff(moment.utc(then));
	        var d = moment.duration(ms);
	        var t = {};
	        t.hour = d.asHours();
	        t.hourFormat = Math.floor(d.asHours());
	        t.minute = moment.utc(ms).format('m');

	        if (t.hour > 0) {
	            var h = Math.floor(t.hour);
	            return h + 'h';
	        } else if (t.minute == '0') return '';else return t.minute + 'm';

	        return t;
	    }
	    function deleteMyFeed(id) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.userRssFeedsListTitle).items.getById(id).delete().then(function (item) {
	            defer.resolve(true);
	        });

	        return defer.promise;
	    }
	    function addMyFeed(userId, feedId) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.userRssFeedsListTitle).items.add({
	            COM_RssFeedUserId: userId,
	            COM_RssFeedId: feedId
	        }).then(function (item) {
	            defer.resolve(item);
	        });

	        return defer.promise;
	    }
	    this.getMyRssFeeds = function (user, articleLimit) {
	        var defer = $q.defer();
	        getRssItems(user).then(function (feeds) {
	            getRssFeeds(feeds).then(function (feedContent) {
	                var feedList = [];
	                for (var i = 0; feedContent.length > i; i++) {
	                    var f = {};
	                    f.title = feedContent[i][0].feedTitle;
	                    f.feedId = feedContent[i][0].feedId;
	                    f.id = feedContent[i][0].id;
	                    f.articles = feedContent[i].slice(0, articleLimit);
	                    feedList.push(f);
	                }
	                defer.resolve(feedList);
	            });
	        });

	        return defer.promise;
	    };
	    this.getAllRssFeeds = function () {
	        var defer = $q.defer();
	        getAllRssFeeds().then(function (feeds) {
	            defer.resolve(feeds);
	        });

	        return defer.promise;
	    };
	    this.addMyFeed = function (userId, feedId) {
	        var defer = $q.defer();
	        addMyFeed(userId, feedId).then(function (response) {
	            defer.resolve(response.data.Id);
	        });

	        return defer.promise;
	    };
	    this.removeMyFeed = function (id) {
	        var defer = $q.defer();
	        deleteMyFeed(id).then(function (feeds) {
	            defer.resolve(feeds);
	        });

	        return defer.promise;
	    };
	}]);

/***/ }),
/* 23 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('storage', ['common', function (common) {
	    var version = 2;
	    function set(key, value, expirationDuration) {
	        if (key != 'v') {
	            // apply userid to make sure storage item is user specific on public methods
	            key = key;
	            value.expiration = expirationDuration === 0 ? 0 : moment().add(expirationDuration, 'hours');
	        }
	        try {
	            return localStorage.setItem(key, angular.toJson(value));
	        } catch (e) {
	            throw new Error('Storage set error for key: ' + key);
	        }
	    }
	    function get(key) {
	        try {
	            if (key != 'v') {
	                key = key;
	                var item = angular.fromJson(localStorage.getItem(key));
	                if (item != null) item.isExpired = isItemExpired(key, item);
	                return item;
	            } else {
	                var item = angular.fromJson(localStorage.getItem(key));
	                return item;
	            }
	        } catch (e) {
	            throw new Error('Storage get error for key: ' + key);
	        }
	    }
	    function remove(key) {
	        return localStorage.removeItem(key);
	    }
	    function clearAll() {
	        localStorage.clear();
	    }
	    function isItemExpired(key, item) {
	        if (item == null) return false;else if (item.expiration === 0) return false;else if (moment(item.expiration) > moment()) {
	            remove(key);
	            return true;
	        } else return false;
	    }
	    /* Clear storage in old format */
	    if (get('v') !== version) {
	        localStorage.clear();
	        set('v', version);
	    }

	    return {
	        get: get,
	        set: set,
	        remove: remove,
	        clearAll: clearAll
	    };
	}]);

/***/ }),
/* 24 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('taxonomyService', ['COM_CONFIG', function (COM_CONFIG) {

	    /*!
	    * Termset utilities
	    Inspiration: http://www.habaneroconsulting.com/insights/returning-a-sharepoint-2013-termset-in-a-tree-structure-using-javascript
	    */

	    /**
	      * Returns a termset, based on ID
	      *
	      * @param {masterTermSetId} guid - Termset ID
	      */
	    this.getTermFromMasterTermsetByGuid = function (masterTermSetId) {
	        var deferred = jQuery.Deferred();

	        getTermSetAsTree(masterTermSetId, '', function (terms) {
	            if (terms != null) {
	                // Kick off the term rendering
	                for (var i = 0; i < terms.Nodes.length; i++) {
	                    //console.log(terms.Nodes[i]);
	                }
	                deferred.resolve(terms.Nodes);
	            } else {
	                deferred.resolve(null);
	            }
	        });

	        return deferred.promise();
	    };

	    /**
	     * Returns a termset, based on ID
	     *
	     * @param {string} id - Termset ID
	     * @param {object} callback - Callback function to call upon completion and pass termset into
	     */
	    function finishTermSetGet(termStore, id, callback, ctx) {
	        var termSet = termStore.getTermSet(id);
	        var terms = termSet.getAllTerms();

	        ctx.load(terms);

	        ctx.executeQueryAsync(Function.createDelegate(this, function (sender, args) {
	            callback(terms);
	        }), Function.createDelegate(this, function (sender, args) {
	            console.log(args);
	        }));
	    }
	    function getTermSet(id, callback) {

	        if (false) {} else {
	            SP.SOD.loadMultiple(['sp.js'], function () {
	                // Make sure taxonomy library is registered
	                SP.SOD.registerSod('sp.taxonomy.js', SP.Utilities.Utility.getLayoutsPageUrl('sp.taxonomy.js'));

	                SP.SOD.loadMultiple(['sp.taxonomy.js'], function () {
	                    var ctx = SP.ClientContext.get_current();
	                    var taxonomySession = SP.Taxonomy.TaxonomySession.getTaxonomySession(ctx);
	                    var termStore = null;

	                    var useSiteCollectionTermStore = false;
	                    if (useSiteCollectionTermStore) {
	                        termStore = taxonomySession.getDefaultSiteCollectionTermStore();
	                        finishTermSetGet(termStore, id, callback, ctx);
	                    } else {
	                        //Term Stores
	                        //var termStores = taxonomySession.getDefaultSiteCollectionTermStore();
	                        termStore = taxonomySession.getDefaultSiteCollectionTermStore();
	                        finishTermSetGet(termStore, id, callback, ctx);
	                    }
	                });
	            });
	        }
	    };

	    /**
	     * Returns an array object of terms as a tree
	     *
	     * @param {string} id - Termset ID
	     * @param {object} callback - Callback function to call upon completion and pass termset into
	     */
	    function getTermSetAsTree(id, filterById, callback) {
	        if (false) {} else {
	            getTermSet(id, function (terms) {
	                var outputNode = null;

	                var termsEnumerator = terms.getEnumerator(),
	                    tree = {
	                    term: terms,
	                    Nodes: []
	                };

	                // Loop through each term
	                while (termsEnumerator.moveNext()) {
	                    var currentTerm = termsEnumerator.get_current();
	                    if (true) {

	                        var currentTermPath = currentTerm.get_pathOfTerm().split(';');
	                        var Nodes = tree.Nodes;

	                        // Loop through each part of the path
	                        for (var i = 0; i < currentTermPath.length; i++) {
	                            var foundNode = false;

	                            for (var j = 0; j < Nodes.length; j++) {
	                                if (Nodes[j].name === currentTermPath[i]) {
	                                    foundNode = true;
	                                    break;
	                                }
	                            }

	                            // Select the node, otherwise create a new one
	                            var term = foundNode ? Nodes[j] : { name: currentTermPath[i], Nodes: [] };

	                            // If we're a child element, add the term properties
	                            if (i === currentTermPath.length - 1) {
	                                term.term = currentTerm;
	                                term.Value = currentTerm.get_name().replace('＆', '&');
	                                term.Key = term.Value;
	                                term.NodeGuid = currentTerm.get_id().toString();
	                                term.IsAvailableForTagging = currentTerm.get_isAvailableForTagging();
	                                term.NewWindow = null;
	                                term.Url = null;
	                                term.IsValidLink = false;
	                                term.IsPopular = false;
	                            }
	                            /* if (term.NodeGuid == filterById){
	                                outputNode = term;
	                            }*/

	                            // If the node did exist, let's look there next iteration
	                            if (foundNode) {
	                                Nodes = term.Nodes;
	                            }
	                            // If the segment of path does not exist, create it
	                            else {
	                                    Nodes.push(term);

	                                    // Reset the children pointer to add there next iteration
	                                    if (i !== currentTermPath.length - 1) {
	                                        Nodes = term.Nodes;
	                                    }
	                                }
	                        }
	                    }
	                }

	                tree = sortTermsFromTree(tree);
	                if (tree.Nodes.length > 0 && filterById != null && filterById != '') {
	                    var parentNode = tree.Nodes[0];

	                    for (var i = 0; i < parentNode.Nodes.length; i++) {
	                        if (parentNode.Nodes[i].NodeGuid == filterById) {
	                            callback(parentNode.Nodes[i]);
	                        }
	                    }

	                    callback(null);
	                } else {
	                    callback(tree);
	                }
	            });
	        }
	    };

	    /**
	     * Sort children array of a term tree by a sort order
	     *
	     * @param {obj} tree The term tree
	     * @return {obj} A sorted term tree
	     */
	    function sortTermsFromTree(tree) {
	        // Check to see if the get_customSortOrder function is defined. If the term is actually a term collection,
	        // there is nothing to sort.
	        if (tree.Nodes.length && tree.term.get_customSortOrder) {
	            var sortOrder = null;

	            if (tree.term.get_customSortOrder()) {
	                sortOrder = tree.term.get_customSortOrder();
	            }

	            // If not null, the custom sort order is a string of GUIDs, delimited by a :
	            if (sortOrder) {
	                sortOrder = sortOrder.split(':');

	                tree.Nodes.sort(function (a, b) {
	                    var indexA = sortOrder.indexOf(a.NodeGuid);
	                    var indexB = sortOrder.indexOf(b.NodeGuid);

	                    if (indexA > indexB) {
	                        return 1;
	                    } else if (indexA < indexB) {
	                        return -1;
	                    }

	                    return 0;
	                });
	            }
	            // If null, terms are just sorted alphabetically
	            else {
	                    tree.Nodes.sort(function (a, b) {
	                        if (a.Value > b.Value) {
	                            return 1;
	                        } else if (a.Value < b.Value) {
	                            return -1;
	                        }

	                        return 0;
	                    });
	                }
	        }

	        for (var i = 0; i < tree.Nodes.length; i++) {
	            tree.Nodes[i] = sortTermsFromTree(tree.Nodes[i]);
	        }

	        return tree;
	    };
	}]);

	module.exports.taxonomyService;

/***/ }),
/* 25 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('userProfileService', ['$http', '$q', 'COM_CONFIG', function ($http, $q, COM_CONFIG) {
	    return {
	        getUserProfile: getUserProfile,
	        getUserLocation: getUserLocation,
	        getCurrentUserProfile: getCurrentUserProfile,
	        getUserDepartment: getUserDepartment,
	        getUsersInMyDepartment: getUsersInMyDepartment
	    };
	    function getUsersInMyDepartment(department) {
	        var defer = $q.defer();
	        var web = new $pnp.Web(COM_CONFIG.rootWeb);
	        web.lists.getByTitle(COM_CONFIG.lists.userInfo).items.filter("Department eq '" + department + "'").get().then(function (data) {
	            defer.resolve(data);
	        });

	        return defer.promise;
	    }
	    function getCurrentUserProfile() {
	        var defer = $q.defer();
	        $pnp.sp.profiles.myProperties.get().then(function (data) {
	            defer.resolve(data);
	        });

	        return defer.promise;
	    }
	    function getUserLocation() {
	        var user = "i:0#.f|membership|" + _spPageContextInfo.userLoginName;
	        return $pnp.sp.profiles.getUserProfilePropertyFor(user, "SPS-Location");
	    }
	    function getUserDepartment() {
	        var user = "i:0#.f|membership|" + _spPageContextInfo.userLoginName;
	        return $pnp.sp.profiles.getUserProfilePropertyFor(user, "Department");
	    }
	    function getUserProfile(emailArray) {
	        var promiseArray = [];
	        for (var i = 0; i < emailArray.length; i++) {
	            //  console.log("Calling UserProfile for " + emailArray[i]);
	            promiseArray.push($pnp.sp.profiles.getPropertiesFor("i:0#.f|membership|" + emailArray[i]));
	        }
	        //Since there aree multiple calls we need to push each of them to an array and return that array of promises
	        //Promise.all will only resolve when all of the promises in the array are resolved.
	        return Promise.all(promiseArray);
	    }
	}]);

/***/ }),
/* 26 */
/***/ (function(module, exports) {

	'use strict';

	angular.module('compassionIntranet').service('weatherService', function ($q, $http) {

	    this.getWeather = function (location, unit) {
	        // console.log("getting weather for " + location);
	        var defer = $q.defer();

	        $http.get("https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20weather.forecast%20where%20woeid%20in%20(select%20woeid%20from%20geo.places(1)%20where%20text%3D%22" + location + "%22)%20and%20u%3D%22" + unit + "%22&&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys").then(function (data, status, headers) {
	            defer.resolve(data);
	            // $scope.greeting = data.query.results.channel.item.link;
	            //  var fore = data.query.results.channel.item.forecast;
	        }, function (data) {
	            console.log("Error calling the yahoo weather service", data);
	            defer.resolve(null);
	        });
	        return defer.promise;
	    };
	});

/***/ }),
/* 27 */
/***/ (function(module, exports) {

	'use strict';

	//import pnp from "sp-pnp-js";

	angular.module('compassionIntranet').service('yammerApiService', function ($q, $interval, $timeout, COM_CONFIG) {
	    var ctrl = this;
	    ctrl.authToken = null;
	    ctrl.requestQueue = {
	        items: [],
	        slowRequests: false
	    };
	    ctrl.numOfRequests = 0;

	    ctrl.newObject = function (a) {
	        var array = [];
	        var ob = void 0;
	        a.forEach(function (x) {
	            ob = {
	                Path: x.Path,
	                SiteTitle: x.SiteTitle,
	                Title: x.Title,
	                Modified: new Date(x.Write)
	            };
	            array.push(ob);
	        });
	        return array;
	    };

	    ctrl.ensureConnection = function () {
	        var deferred = $q.defer();
	        // var yam = window.yam || null;
	        if (yam !== null) {
	            yam.getLoginStatus(function (response) {
	                if (response.authResponse) {
	                    //console.log("Yammer logged in.");
	                    //console.dir("Yammer user information", response); //print user information to the console
	                    yam.platform.setAuthToken(response.access_token.token);
	                    deferred.resolve();
	                } else {
	                    console.log("Not logged in. Pulling token from User Profile");
	                    //deferred.reject();

	                    var loginName = "i:0#.f|membership|" + _spPageContextInfo.userLoginName;

	                    $pnp.sp.profiles.getUserProfilePropertyFor(loginName, "YammerOAuth").then(function (authToken) {
	                        if (authToken) {
	                            localStorage.removeItem("yammer_token");
	                            localStorage.setItem("yammer_token", authToken);
	                            yam.platform.setAuthToken(authToken, function (response) {});
	                        }
	                        deferred.resolve();
	                    }, function (err) {
	                        console.log("Could not retrieve token from User Profile.  Error data", err);
	                        deferred.reject(err);
	                    });
	                }
	            });
	        } else {
	            console.log("Yam undefined");
	            deferred.reject();
	        }
	        return deferred.promise;
	    };

	    ctrl.getOpenGraphObjectFull = function (openGraphObjectId) {
	        var def = $q.defer();
	        var me = this;
	        var endpoint = "messages/open_graph_objects/" + openGraphObjectId + ".json";

	        var getData = function getData() {
	            var getDataDeferred = $q.defer();
	            me.queueThrottledRequest({
	                url: endpoint,
	                method: 'GET',
	                data: {},
	                success: function success(response) {
	                    getDataDeferred.resolve(response);
	                },
	                error: function error(response) {
	                    console.log("Error in getOpenGraphObjectFull", response);
	                }
	            });

	            return getDataDeferred.promise;
	        };

	        var cacheObj = $pnp.storage.local;
	        var expireMe = $pnp.util.dateAdd(new Date(), "minute", 5);

	        cacheObj.getOrPut("yammer_cache/" + endpoint, getData, expireMe).then(function (data) {
	            def.resolve(data);
	        });

	        return def.promise;
	    };

	    ctrl.getOpenGraphObjectRecursive = function (openGraphObjectId, olderThanMessageId, messages) {
	        var def = $q.defer();
	        var me = this;
	        me.getOpenGraphObject(openGraphObjectId, olderThanMessageId).then(function (data) {
	            if (data.messages.length > 0) {
	                messages.push(data.messages);
	                var lastMessage = data.messages[data.messages.length - 1];
	                me.getOpenGraphObjectRecursive(openGraphObjectId, lastMessage.id, messages).then(function (x) {
	                    def.resolve(messages);
	                });
	            } else {
	                def.resolve(messages);
	            }
	        });

	        return def.promise;
	    };

	    ctrl.getOpenGraphObject = function (openGraphObjectId, olderThanMessageId) {
	        var def = $q.defer();
	        var me = this;
	        var olderThanMessageIdQueryString = "";

	        if (olderThanMessageId != null) {
	            olderThanMessageIdQueryString = "&older_than=" + olderThanMessageId;
	        }
	        var endpoint = "messages/open_graph_objects/" + openGraphObjectId + ".json?threaded=extended" + olderThanMessageIdQueryString;

	        var getData = function getData() {
	            var getDataDeferred = $q.defer();
	            var requestObj = {
	                url: endpoint,
	                method: "GET",
	                data: {},
	                success: function success(data) {
	                    getDataDeferred.resolve(data);
	                },
	                error: function error(err) {
	                    console.log("getOpenGraphObject", err);
	                    getDataDeferred.reject(err);
	                }
	            };

	            me.queueThrottledRequest(requestObj);
	            return getDataDeferred.promise;
	        };

	        var cacheObj = $pnp.storage.local;
	        var expireMe = $pnp.util.dateAdd(new Date(), "minute", 5);

	        cacheObj.getOrPut("yammer_cache/" + endpoint, getData, expireMe).then(function (data) {
	            def.resolve(data);
	        });

	        return def.promise;
	    };

	    ctrl.getOpenGraphItemByUrl = function (url) {
	        var def = $q.defer();
	        var me = this;
	        var endpoint = "open_graph_objects?url=" + url;

	        var getData = function getData() {
	            var getDataDeferred = $q.defer();
	            me.queueThrottledRequest({
	                url: endpoint,
	                method: "GET",
	                data: {},
	                success: function success(data) {
	                    //console.log("data", data);
	                    //def.resolve(data);
	                    getDataDeferred.resolve(data);
	                },
	                error: function error(err) {
	                    console.warn(err);
	                    def.reject(err);
	                }
	            });

	            return getDataDeferred.promise;
	        };

	        var cacheObj = $pnp.storage.local;
	        var expireMe = $pnp.util.dateAdd(new Date(), "minute", 5);

	        cacheObj.getOrPut("yammer_cache/" + endpoint, getData, expireMe).then(function (data) {
	            def.resolve(data);
	        });

	        return def.promise;
	    };

	    ctrl.queueThrottledRequest = function (options) {
	        if (document.location.href.toLocaleLowerCase() === COM_CONFIG.rootWeb || document.location.href.toLocaleLowerCase() === COM_CONFIG.rootWeb + "/" || document.location.href.toLocaleLowerCase() === COM_CONFIG.rootWeb + "/pages/default.aspx" || document.location.href.toLocaleLowerCase() === COM_CONFIG.rootWeb + "/news/pages/default.aspx" || document.location.href.toLocaleLowerCase() === COM_CONFIG.rootWeb + "/news/") {
	            this.requestQueue.items.push(options);
	        } else {
	            yam.platform.request(options);
	        }
	    };

	    ctrl.processThrottledRequests = function () {
	        var me = this;
	        var slowSpeed = 1200;
	        var fastSpeed = 300;
	        var requestDelay = fastSpeed;
	        var interval; // = Math.floor(Math.random() * 1200) + 500;
	        //if (me.numOfRequests > 10){

	        if (document.location.href.toLocaleLowerCase() === COM_CONFIG.rootWeb || document.location.href.toLocaleLowerCase() === COM_CONFIG.rootWeb + "/" || document.location.href.toLocaleLowerCase() === COM_CONFIG.rootWeb + "/pages/default.aspx" || document.location.href.toLocaleLowerCase() === COM_CONFIG.rootWeb + "/news/pages/default.aspx" || document.location.href.toLocaleLowerCase() === COM_CONFIG.rootWeb + "/news/") {
	            interval = 300;
	            $interval(function () {
	                if (me.requestQueue.items.length > 0) {
	                    var item = me.requestQueue.items.shift();
	                    if (item) {
	                        console.log("processThrottledRequests: Processing item", item);
	                        yam.platform.request(item);
	                    }
	                }
	            }, interval);
	        } else {
	            console.log("Not throttling Yammer requests for this page");
	        }
	    };

	    ctrl.getYammerGroupsForUser = function () {
	        var def = $q.defer();
	        var me = this;
	        // var yam = window.yam || null;
	        if (yam !== null) {
	            me.ensureConnection().then(function (response) {
	                //me.makeRequest("https://api.yammer.com/api/v1/users/current.json?include_group_memberships=true", "GET", {}, 

	                yam.platform.request({
	                    url: "https://api.yammer.com/api/v1/groups.json?mine=1",
	                    method: "GET",
	                    data: {},
	                    success: function success(data) {
	                        console.log("Yammer Groups", data);
	                        var groups = data;

	                        groups = groups.sort(function (x, y) {
	                            return new Date(x.stats.last_message_at) < new Date(y.stats.last_message_at);
	                        });

	                        groups = groups.slice(0, 3);
	                        groups.map(function (item) {
	                            item.Modified = new Date(item.stats.last_message_at);
	                            if (item.Modified.getYear() == 69) {
	                                item.Modified = "No Yammer Posts";
	                            } else {
	                                item.Modified = item.Modified.format('MMMM D, YYYY');
	                            }
	                        });

	                        def.resolve(groups);
	                    },
	                    error: function error(err) {
	                        console.warn(err);
	                        def.reject();
	                    }
	                });
	            }, function () {
	                console.log("Not logged in. Trying again");
	                //setTimeout(me.getYammerGroupsForUser(), 1200);
	            }).catch(function (err) {
	                console.log("Yammer not logged in.");
	                def.reject(err);
	            });
	        }
	        return def.promise;
	    };
	    ctrl.getLikeCountForMessage = function (messageId) {
	        var def = $q.defer();
	        var me = this;
	        if (yam !== null) {
	            me.ensureConnection().then(function (response) {
	                //me.makeRequest("https://api.yammer.com/api/v1/users/current.json?include_group_memberships=true", "GET", {}, 

	                yam.platform.request({
	                    url: "https://www.yammer.com/api/v1/users/liked_message/" + messageId + ".json",
	                    method: "GET",
	                    data: {},
	                    success: function success(data) {
	                        console.log("Yammer Groups", data);
	                        var groups = data;

	                        groups = groups.sort(function (x, y) {
	                            return new Date(x.stats.last_message_at) < new Date(y.stats.last_message_at);
	                        });

	                        groups = groups.slice(0, 3);
	                        groups.map(function (item) {
	                            item.Modified = new Date(item.stats.last_message_at);
	                            if (item.Modified.getYear() == 69) {
	                                item.Modified = "No Yammer Posts";
	                            } else {
	                                item.Modified = item.Modified.format('MMMM D, YYYY');
	                            }
	                        });

	                        def.resolve(groups);
	                    },
	                    error: function error(err) {
	                        console.warn(err);
	                        def.reject();
	                    }
	                });
	            }, function () {
	                console.log("Not logged in. Trying again");
	                //setTimeout(me.getYammerGroupsForUser(), 1200);
	            }).catch(function (err) {
	                console.log("Yammer not logged in.");
	                def.reject(err);
	            });
	        }
	        return def.promise;
	    };

	    ctrl.formatUrl = function (url) {
	        if (url.startsWith("http") == false) {
	            if (url.endsWith("/")) {
	                url = url.substring(0, url.length - 1);
	            }

	            if (url.startsWith("/") == false) {
	                url = "/" + url;
	            }

	            var rex = /^(?:https?:\/\/)?(?:[^@\n]+@)?(?:www\.)?([^:\/\n]+)/im;
	            var fullUrl = location.href;
	            var rootWeb = fullUrl.match(rex)[0];
	            url = rootWeb + url;
	        }
	        return url;
	    };

	    ctrl.isGraphObjectCreatedForUrl = function (url, getCommentsAndLikes) {
	        var defer = $q.defer();
	        var me = this;
	        me.ensureConnection().then(function (response) {
	            me.getOpenGraphItemByUrl(url).then(function (data) {
	                if (getCommentsAndLikes) {
	                    var opengraphId = data.id;

	                    var messages = [];
	                    var likes = 0;

	                    me.getOpenGraphObjectRecursive(opengraphId, null, []).then(function (pages) {
	                        //me.getOpenGraphObjectFull(opengraphId).then(function (pages) {

	                        var returnObj = {
	                            likeCount: 0,
	                            commentCount: 0
	                        };

	                        if (pages.length > 0) {
	                            for (var i = 0; i < pages.length; i++) {
	                                var page = pages[i];
	                                returnObj.commentCount += page.length;
	                            }

	                            // check if the first comment is a dummy comment inserted by the system
	                            if (pages[0][0].body.rich == "") {
	                                // subtract 1 from the comment count because the first comment is the "dummy comment" inserted by the page
	                                returnObj.commentCount = returnObj.commentCount - 1;
	                            }
	                        } else {
	                            returnObj.commentCount = 0;
	                        }

	                        defer.resolve(returnObj);
	                    });
	                } else {
	                    defer.resolve(data);
	                }
	            }, function (errorData) {
	                if (errorData.statusText === "Not Found") {
	                    defer.resolve(errorData.statusText);
	                } else {
	                    console.log("Yammer error", errorData);
	                    defer.reject();
	                }
	            });
	        }, function (errorData) {
	            if (errorData.statusText === "Not Found") {
	                defer.resolve(errorData.statusText);
	            } else {
	                console.log("Yammer error", errorData);
	                defer.reject();
	            }
	        });

	        return defer.promise;
	    };

	    ctrl.createGraphObject = function (url, title, defaultGroupId) {
	        var defer = $q.defer();
	        var endpoint = 'https://api.yammer.com/api/v1/messages.json';

	        if (angular.isDefined(defaultGroupId) == false) {
	            defaultGroupId = COM_CONFIG.yammer.defaultGroupId;
	        }

	        var obj = {
	            og_url: url,
	            og_title: title,
	            group_id: defaultGroupId
	        };
	        yam.platform.request({
	            url: endpoint,
	            method: 'POST',
	            data: obj,
	            success: function success(response) {
	                defer.resolve(response);
	            },
	            error: function error(errorResponse) {
	                defer.resolve("Error creating Yammer converstion.  Contact IT Support");
	            }
	        });
	        return defer.promise;
	    };

	    // initialize throttle requests
	    ctrl.processThrottledRequests();
	});

/***/ }),
/* 28 */
/***/ (function(module, exports) {

	'use strict';

	(function () {
	    'use strict';

	    angular.module('compassionIntranet').directive('modal', Directive);

	    function Directive(modalService) {
	        return {
	            link: function link(scope, element, attrs) {
	                // ensure id attribute exists
	                if (!attrs.id) {
	                    console.error('modal must have an id');
	                    return;
	                }

	                // move element to bottom of page (just before </body>) so it can be displayed above everything else
	                $(element).appendTo('body');

	                // close modal on background click
	                $(element).on('click', function (e) {
	                    var target = $(e.target);
	                    if (!target.closest('.modal-body').length) {
	                        scope.$evalAsync(Close);
	                    }
	                });

	                // add self (this modal instance) to the modal service so it's accessible from controllers
	                var modal = {
	                    id: attrs.id,
	                    open: Open,
	                    close: Close
	                };
	                modalService.Add(modal);

	                // remove self from modal service when directive is destroyed
	                scope.$on('$destroy', function () {
	                    modalService.Remove(attrs.id);
	                    $(element).remove();
	                });

	                // open modal
	                function Open() {
	                    $(element).show();
	                    $(element).addClass('modal-open');
	                }

	                // close modal
	                function Close() {
	                    $(element).hide();
	                    $(element).removeClass('modal-open');
	                }
	            }
	        };
	    }
	})();

/***/ }),
/* 29 */
/***/ (function(module, exports) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'uiHelper',
	    firstNameId = 'ci-user-first-name';

	myApp.controller(controllerName, ['$scope', 'COM_CONFIG', function ($scope, COM_CONFIG) {
	    var userDisplayName = _spPageContextInfo.userDisplayName,
	        userId = _spPageContextInfo.userId;
	    var userFirstName = getFirstName(userDisplayName);
	    var userLastName = getLastName(userDisplayName);
	    //Setup Responsive Variables
	    var isMobile = "",
	        isTablet = "",
	        isDesktop = "";

	    var ctrl = this;
	    ctrl.isToolbarOpen = false;

	    $scope.init = function () {
	        addFirstNameToWelcomeMessage(userFirstName);
	        $(window).resize(processWindowSize);
	        processWindowSize();
	    };
	    //check window size and setup functions
	    function processWindowSize() {
	        var ua = window.navigator.userAgent;
	        var msie = ua.indexOf("MSIE");

	        if (msie > 0) // If Internet Explorer
	            {
	                var width = window.innerWidth;
	            } else // If another browser
	            {
	                var width = $(window).width();
	            }

	        if (width >= 991) {
	            isMobile = false;
	            isTablet = false;
	            isDesktop = true;
	        } else if (width >= 768) {
	            isTablet = true;
	        } else {
	            isMobile = true;
	            isTablet = false;
	            isDesktop = false;
	        }

	        //setup functions that need to be ran on resize
	        rightRailHeight();
	    } //processWindowSize
	    function rightRailHeight() {
	        setTimeout(function () {
	            /* not sure what $rightRail is...ask Bartke
	            $rightRail = $('.main-right-rail');
	            $rightRailInitial = $rightRail.height();
	            //RESET HEIGHT BEFORE SETTING SO THAT CONTAINER DOESNT INCLUDE IT.
	              if (isDesktop === true) {
	                var mainContainerHeight = $('.main-left-content').outerHeight(true);
	                if ($rightRailInitial < mainContainerHeight) {
	                    $rightRail.css('height', mainContainerHeight);
	                } else {
	                    $rightRail.css('height', $rightRailInitial);
	                }
	            } else {
	                $rightRail.css('height', '');
	                $rightRail.css('height', 'auto');
	            }
	            */
	        }, 2000);
	    }
	    function addFirstNameToWelcomeMessage(firstName) {
	        $('#' + firstNameId).text(firstName);
	    }
	    function getFirstName(fullName) {
	        var names = fullName.split(' ');
	        if (names.length > 0) return names[0];else return '';
	    }
	    function getLastName(fullName) {
	        var names = fullName.split(' ');
	        if (names.length > 1) return names[1];else return '';
	    }
	}]);

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var ctrlName = "anniversaryCtrl";
	var myApp = angular.module('compassionIntranet');

	myApp.controller(ctrlName, ['$scope', 'anniversaryService', 'COM_CONFIG', function ($scope, anniversaryService, COM_CONFIG) {
	    var ctrl = this;

	    this.$onInit = function () {
	        anniversaryService.getAnniversary().then(function (data) {
	            ctrl.anniversary = data;
	        });
	    };
	}]).component('anniversary', {
	    template: __webpack_require__(31),
	    controller: ctrlName,
	    controlleras: 'ctrl',
	    bindings: {
	        anniversarylimit: '@'
	    }
	});

/***/ }),
/* 31 */
/***/ (function(module, exports) {

	module.exports = "<section class=\"gratitudes\">\r\n<div class=\"card\" ng-repeat=\"anniversary in ctrl.anniversary track by $index\">\r\n    <ul>\r\n        <li ng-repeat=\"anniversary.contact\">\r\n            <a ng-href=\"#\">\r\n                {{anniversary.date}}\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</div>\r\n</section>";

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'bookmarkPageController';

	myApp.controller(controllerName, ['$scope', 'bookmarkService', function ($scope, bookmarkService) {
	    var ctrl = this;
	    var thisUrl = _spPageContextInfo.siteAbsoluteUrl;
	    var userId = _spPageContextInfo.userId;
	    var webTitle = _spPageContextInfo.webTitle;

	    this.$onInit = function () {
	        bookmarkService.getMyBookmarks(userId).then(function (response) {
	            ctrl.myBookmarks = response;
	        });
	    };

	    ctrl.isMyBookmark = function () {
	        return _.findIndex(ctrl.myBookmarks, function (b) {
	            return b.url == thisUrl;
	        }) != -1;
	    };
	    ctrl.addMyBookmark = function () {
	        bookmarkService.addMyBookmark(userId, webTitle, thisUrl).then(function (response) {
	            ctrl.myBookmarks.push(response);
	        });
	    };
	}]).component('bookmarkPage', {
	    template: __webpack_require__(33),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 33 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"bookmark pull-right\" ng-show=\"!ctrl.isMyBookmark()\">\r\n    <a ng-click=\"ctrl.addMyBookmark()\">\r\n        <span class=\"\">Bookmark<i class=\"fa fa-bookmark\" aria-hidden=\"true\"></i></span>\r\n    </a>\r\n</div>";

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	var ctrlName = "depNewsCtrl";
	// const cacheObj = pnp.storage.local;
	var myApp = angular.module('compassionIntranet');

	myApp.controller(ctrlName, function ($scope, departmentNewsService, COM_CONFIG, yammerApiService) {

	    $scope.newsSite = DISCOVER_CONFIG.rootWeb + "/news/pages/default.aspx";
	    // if (!DISCOVER_CONFIG.useCaching) {
	    //     cacheObj.delete(ctrlName);
	    // }

	    // cacheObj.getOrPut(ctrlName, departmentNewsService.getNews).then(function(data) {
	    departmentNewsService.getNews().then(function (data) {
	        if (data.results) {
	            var events = data.results.filter(function (item) {

	                var x = item.ContentType;
	                if (x.indexOf('Event') > 0) return item;
	            });

	            var news = data.results.filter(function (item) {
	                var x = item.ContentType;
	                if (x.indexOf('Article') > 0) return item;
	            });

	            // calculate likes
	            // angular.forEach(events, function(item) {
	            //     yammerApiService.getLikesAndComments(item.FileRef).then(function(data) {
	            //         item.likes = data.results.likes;
	            //         item.commentCount = data.results.comments;
	            //     });
	            // });


	            $scope.department = data.userDepartment;
	            $scope.departmentUrl = data.departmentLink;
	            $scope.newsLink = data.departmentLink + "pages/news.aspx";
	            $scope.news = news;
	            $scope.events = events;
	        } else {
	            console.log("No department results");
	        }
	    });
	}).component('departmentNews', {

	    template: __webpack_require__(35),
	    controller: ctrlName,
	    controllerAs: 'ctrl'

	});

/***/ }),
/* 35 */
/***/ (function(module, exports) {

	module.exports = "<div ng-show=\"news || events\" class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <span class=\"line-title\">Latest From {{department}}</span>\r\n    </div>\r\n</div>\r\n<div ng-show=\"news || events\" class=\"corporate-communications\">\r\n    <div class=\"row flex\">\r\n        <div ng-show=\"news\" ng-repeat=\"item in news\" class=\"col-md-4 flex\">\r\n            <div class=\"tiles image-top\" ng-if=\"item.img\">\r\n                <div class=\"image-contain\">\r\n                    <img ng-src=\"{{item.img}}\">\r\n                </div>\r\n                <div class=\"copy-contain\">\r\n                    <div class=\"title-contain\">\r\n                        <a href=\"{{departmentUrl}}#?category={{item.RefinableString15}}\">\r\n                            <span class=\"story-tag blue\" ng-if=\"item.RefinableString15\">{{item.RefinableString15}}</span>\r\n                        </a>\r\n                        <h2><a ng-href={{item.Path}}>{{item.Title}}</a></h2>\r\n                    </div>\r\n\r\n                    <div class=\"date-share\">\r\n                        <span class=\"regular-body numbers\">{{item.articleDate}}</span>\r\n                        <card-footer page-url={{item.Path}} item-id={{ListItemID}}></card-footer>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div ng-if=\"!item.img\" class=\"tiles no-image\">\r\n                <div class=\"copy-contain\">\r\n                    <a href=\"{{departmentUrl}}#?category={{item.RefinableString15}}\">\r\n                        <span class=\"story-tag blue\" ng-if=\"item.RefinableString15\">{{item.RefinableString15}}</span>\r\n                    </a>\r\n                    <h2><a href=\"{{item.Path}}\">{{item.Title}}</a></h2>\r\n                </div>\r\n                <div class=\"date-share\">\r\n                    <span class=\"regular-body numbers\">{{item.articleDate}}</span>\r\n                    <card-footer page-url={{item.Path}} item-id={{ListItemID}}></card-footer>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div ng-show=\"events\" ng-repeat=\"item in events\" class=\"col-md-4 flex\">\r\n            <div class=\"half tiles event\">\r\n                <div class=\"copy-contain\">\r\n                    <span class=\"story-tag\" ng-if=\"item.RefinableString14\">{{item.RefinableString14}}</span>\r\n                    <h2><a href=\"{{item.Path}}\">{{item.Title}}</a></h2>\r\n                    <div class=\"event-date-time\">\r\n                        <span class=\"event-date\">\r\n\t\t\t\t\t\t\t<span class=\"icon-Calendar\"></span>\r\n                        <span class=\"date numbers\">{{item.eventStart}}</span>\r\n                        </span>\r\n                        <span class=\"event-time\">\r\n\t\t\t\t\t\t\t<span class=\"icon-Time\"></span>\r\n                        <span class=\"time numbers\">{{item.startTime}} - {{item.endTime}} {{event.RefinableString103}}</span>\r\n                        </span>\r\n                    </div>\r\n                    <add-to-outlook-button subject=\"{{item.Title}}\" body=\"\" start=\"{{item.OutlookStartDate | date:'yyyy-MM-ddTHH:mm:ss'}}\" end=\"{{item.OutlookEndDate | date:'yyyy-MM-ddTHH:mm:ss'}}\" timezone=\"UTC\" location=\"{{item.RefinableString104}}\"></add-to-outlook-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <a href=\"{{departmentUrl}}\" class=\"view-all\">GO TO {{department}}</a>\r\n</div>";

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'employeeAnnouncementCtrl';

	myApp.controller(controllerName, ['$scope', 'common', 'appService', 'COM_CONFIG', function ($scope, common, appService, COM_CONFIG) {
	    var ctrl = this;

	    this.$onInit = function () {
	        //ctrl.myApps = $scope.$parent.ctrl.myApps;
	    };
	}]).component('employeeAnnouncement', {
	    template: __webpack_require__(37),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 37 */
/***/ (function(module, exports) {

	module.exports = "<section class=\"employee-announcement\">\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <div class=\"media employee-card announce\">\r\n            <!--  <img class=\"d-flex align-self-start mr-3 emp-photo\" src=\"../images/homepage/oval-2.jpg\" alt=\"Generic placeholder image\"> -->\r\n            <i class=\"fa fa-calendar d-flex align-self-start\" aria-hidden=\"true\"></i>\r\n            <div class=\"media-body\">\r\n                <span class=\"mt-0 emp-announce\">{{ctrl.title}}</span>\r\n                <span class=\"emp-info\">{{ctrl.message}}</span>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</section>";

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var ctrlName = "employeeSpotlight";
	var myApp = angular.module('compassionIntranet');

	myApp.controller(ctrlName, ['$scope', 'employeeSpotlightService', 'COM_CONFIG', function ($scope, employeeSpotlightService, COM_CONFIG) {
	    var ctrl = this;

	    this.$onInit = function () {
	        employeeSpotlightService.getGratitudes().then(function (data) {
	            ctrl.employeeSpotlight = data;
	        });
	    };
	}]).component('employeeSpotlight', {
	    template: __webpack_require__(39),
	    controller: ctrlName,
	    controlleras: 'ctrl',
	    bindings: {
	        spotlightlimit: '@'
	    }
	});

/***/ }),
/* 39 */
/***/ (function(module, exports) {

	module.exports = "<section class=\"spotlights\">\r\n    <h2>Employee Spotlight</h2>\r\n    <ul class=\"tab-picker row\">\r\n        <li class=\"col-md-4\" ng-click=\"ctrl.toggleActiveTab('gratitudes')\"><h2>gratitudes</h2></li>\r\n        <li class=\"col-md-4\" ng-click=\"ctrl.toggleActiveTab('newHires')\"><h2>new hires</h2></li>\r\n        <li class=\"col-md-4\" ng-click=\"ctrl.toggleActiveTab('anniversary')\"><h2>anniversaries + retirements</h2></li>\r\n    </ul>\r\n    <div class=\"ci-gratitudes\" ng-show=\"ctrl.activeTab == 'gratitudes'\">\r\n        <gratitudes></gratitudes>\r\n    </div>\r\n    <div class=\"ci-newHires\" ng-show=\"ctrl.activeTab == 'newHires'\">\r\n        <newHires></newHires>\r\n    </div>\r\n    <div class=\"ci-anniversary\" ng-show=\"ctrl.activeTab == 'anniversary'\">\r\n        <anniversary></anniversary>\r\n    </div>\r\n    <input id=\"ci-pp-activeTab\" type=\"hidden\" ng-model=\"ctrl.activeTab\" />\r\n    \r\n    <div class=\"row\">\r\n        <ul>\r\n            <li class=\"col-12\">\r\n                <a class=\"btn btn-cta\" href=\"#\">Submit a [Gratitude]</a>\r\n            </li>\r\n            <li class=\"col-12\">\r\n                <a class=\"btn btn-cta\" href=\"#\">View All</a>\r\n            </li>\r\n       </ul>\r\n    </div>\r\n\r\n</section>";

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'findPeopleCtrl';

	myApp.controller(controllerName, ['$scope', 'graphService', 'COM_CONFIG', function ($scope, graphService, COM_CONFIG) {
	    var ctrl = this;
	    ctrl.searchText;

	    this.$onInit = function () {
	        graphService.getMyPeople().then(function (data) {
	            ctrl.myPeople = data;
	        });
	    };

	    ctrl.searchUsers = function () {
	        graphService.searchMyUsers(ctrl.searchText).then(function (data) {
	            ctrl.myPeople = data;
	        });
	    };
	}]).component('findPeople', {
	    template: __webpack_require__(41),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 41 */
/***/ (function(module, exports) {

	module.exports = "<section class=\"background-off-white find-people\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <h2 class=\"section\">Find People + Collaborate</h2>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-8\">\r\n                <div class=\"input-group search\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Search for...\" ng-model=\"ctrl.searchText\">\r\n                    <span class=\"input-group-btn\">\r\n                        <button ng-click=\"ctrl.searchUsers()\" class=\"btn btn-input\" type=\"button\"><i class=\"fa fa-search\"></i></button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <h3>Recommended for You</h3>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div id=\"findPeopleCarousel\" class=\"find-people-carousel carousel col-12\" data-ride=\"\">\r\n                <ol class=\"carousel-indicators\">\r\n                    <li data-target=\"#findPeopleCarousel\" data-slide-to=\"0\" class=\"active\"></li>\r\n                    <li data-target=\"#findPeopleCarousel\" data-slide-to=\"1\"></li>\r\n                    <li data-target=\"#findPeopleCarousel\" data-slide-to=\"2\"></li>\r\n                </ol>\r\n                <div class=\"carousel-inner\" role=\"listbox\">\r\n                    <div class=\"carousel-item active\">\r\n                        <div class=\"col-lg-3 col-md-6 employee-card-wrapper\" ng-repeat=\"person in ctrl.myPeople | limitTo: 4:0 track by person.id\">\r\n                            <div class=\"employee-card\">                                \r\n                                <img class=\"align-self-center emp-photo\" ng-src=\"{{person.picUrl}}\" alt=\"{{person.displayName}}\">\r\n                                \r\n                                <h3 class=\"emp-name\">{{person.displayName}}</h3>\r\n                                <span class=\"h5 emp-loc\">{{person.group}}</span>\r\n                                <span class=\"h5 emp-title\">{{person.title}}</span>\r\n                                <img class=\"emp-logo\" ng-src=\"{{person.logo}}\">\r\n                                <hr>\r\n                                <span class=\"emp-address\">{{person.location}}</span>\r\n                                <span class=\"emp-phone\">{{person.phone}}</span>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div ng-if=\"ctrl.myPeople.length > 4\" class=\"carousel-item\">\r\n                        <div class=\"col-lg-3 col-md-6 employee-card-wrapper\" ng-repeat=\"person in ctrl.myPeople | limitTo: 8:4 track by person.id\">\r\n                            <div class=\"employee-card\">\r\n                                \r\n                                <img class=\"align-self-center emp-photo\" ng-src=\"{{person.picUrl}}\" alt=\"{{person.displayName}}\">\r\n                                \r\n                                <h3 class=\"emp-name\">{{person.displayName}}</h3>\r\n                                <span class=\"h5 emp-loc\">{{person.group}}</span>\r\n                                <span class=\"h5 emp-title\">{{person.title}}</span>\r\n                                <img class=\"emp-logo\" ng-src=\"{{person.logo}}\">\r\n                                <hr>\r\n                                <span class=\"emp-address\">{{person.location}}</span>\r\n                                <span class=\"emp-phone\">{{person.phone}}</span>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div ng-if=\"ctrl.myPeople.length > 8\" class=\"carousel-item\">\r\n                        <div class=\"col-lg-3 col-md-6 employee-card-wrapper\" ng-repeat=\"person in ctrl.myPeople | limitTo: 12:8 track by person.id\">\r\n                            <div class=\"employee-card\">\r\n                                \r\n                                <img class=\"align-self-center emp-photo\" ng-src=\"{{person.picUrl}}\" alt=\"{{person.displayName}}\">\r\n                                \r\n                                <h3 class=\"emp-name\">{{person.displayName}}</h3>\r\n                                <span class=\"h5 emp-loc\">{{person.group}}</span>\r\n                                <span class=\"h5 emp-title\">{{person.title}}</span>\r\n                                <img class=\"emp-logo\" ng-src=\"{{person.logo}}\">\r\n                                <hr>\r\n                                <span class=\"emp-address\">{{person.location}}</span>\r\n                                <span class=\"emp-phone\">{{person.phone}}</span>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                        \r\n                </div>\r\n            </div><!--/.find-people-carousel-->\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <a class=\"btn btn-cta\" href=\"#\">View All</a>\r\n            </div>\r\n        </div>\r\n    </div><!--/.container-->\r\n</section>";

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'globalPartnersController';

	myApp.controller(controllerName, ['$scope', '$q', 'COM_CONFIG', 'globalPartnerService', function ($scope, $q, COM_CONFIG, globalPartnerService) {
	    var ctrl = this;
	    var delveUrl = '';

	    ctrl.toggleVisibility = function () {
	        return ctrl.activeTab == 'places';
	    };
	    $scope.$on('activeTab', function (event, arg) {
	        ctrl.activeTab = arg;
	    });

	    this.$onInit = function () {
	        globalPartnerService.getGlobalPartners().then(function (data) {
	            ctrl.globalPartners = data;
	        });
	    };
	}]).component('globalPartners', {
	    template: __webpack_require__(43),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 43 */
/***/ (function(module, exports) {

	module.exports = "<section class=\"global-partners\" ng-show=\"ctrl.toggleVisibility()\">\r\n    <h2>Global Partners</h2>\r\n    <ul>\r\n        <li ng-repeat=\"partner in ctrl.globalPartners track by $index\">\r\n            <a ng-href=\"{{partner.siteUrl}}\">\r\n                <img ng-src=\"{{partner.iconUrl}}\" />\r\n                <span>{{partner.title}}</span>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</section>";

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var ctrlName = "gratitudes";
	var myApp = angular.module('compassionIntranet');

	myApp.controller(ctrlName, ['$scope', 'gratitudesService', 'COM_CONFIG', function ($scope, gratitudesService, COM_CONFIG) {
	    var ctrl = this;

	    this.$onInit = function () {
	        gratitudesService.getGratitudes().then(function (data) {
	            ctrl.gratitudes = data;
	        });
	    };
	}]).component('gratitudes', {
	    template: __webpack_require__(45),
	    controller: ctrlName,
	    controlleras: 'ctrl',
	    bindings: {
	        gratitudelimit: '@'
	    }
	});

/***/ }),
/* 45 */
/***/ (function(module, exports) {

	module.exports = "<section class=\"gratitudes\">\r\n    <div class=\"card\" ng-repeat=\"gratitude in ctrl.gratitudes track by $index\">\r\n        <ul>\r\n            <li ng-repeat=\"gratitude.contact\">\r\n                <a ng-href=\"#\">\r\n                    {{gratitude.description}}\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</section>";

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'groupSummaryCtrl';

	myApp.controller(controllerName, ['$scope', 'common', 'groupService', 'COM_CONFIG', function ($scope, common, groupService, COM_CONFIG) {
	    var ctrl = this;
	    var userId = _spPageContextInfo.userId;
	    var closedGroups = [];
	    var openGroups = [];

	    ctrl.toggleSummary = toggleSummary;
	    ctrl.isGroupActive = isGroupActive;

	    this.$onInit = function () {
	        groupService.getGroups().then(function (data) {
	            ctrl.groups = data;
	            for (var i = 0; i < data.length; i++) {
	                var item = data[i];
	                closedGroups.push(item.id);
	            }
	        });
	    };
	    function isGroupActive(id) {
	        var closedIndex = closedGroups.indexOf(id);
	        var openIndex = openGroups.indexOf(id);
	        if (closedIndex == -1 && openIndex > -1) {
	            return true;
	        } else if (openIndex == -1 && closedIndex > -1) {
	            return false;
	        }
	        return false;
	    }
	    function toggleSummary(id) {
	        // if group is closed
	        var closedIndex = closedGroups.indexOf(id);
	        var openIndex = openGroups.indexOf(id);
	        if (closedIndex != -1) {
	            closedGroups.splice(closedIndex, 1);
	            openGroups.push(id);
	        } else if (openIndex != -1) {
	            openGroups.splice(openIndex, 1);
	            closedGroups.push(id);
	        }
	    }
	}]).component('groupSummary', {
	    template: __webpack_require__(47),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 47 */
/***/ (function(module, exports) {

	module.exports = "<section id=\"group-summary\" class=\"group-summary\">\r\n    <div id=\"groupSumAccordion\" class=\"group-summary-accordion\" role=\"tablist\" aria-multiselectable=\"true\">\r\n        <div class=\"card\" ng-repeat=\"group in ctrl.groups track by group.id\">\r\n            <div class=\"card-header row\" role=\"tab\" id=\"headingOne\">\r\n                <div class=\"col-sm-8\">\r\n                    <a class=\"toolbar-toggle-button\" ng-href=\"javascript:void(0)\" ng-click=\"ctrl.toggleSummary(group.id)\">\r\n                        <i class=\"fa fa-plus\" ng-show=\"!ctrl.isGroupActive(group.id)\"></i>\r\n                        <i class=\"fa fa-minus\" ng-show=\"ctrl.isGroupActive(group.id)\"></i>\r\n                        <h5 class=\"mb-0\">{{group.name}}</h5>\r\n                    </a>\r\n                </div>\r\n                <div class=\"col-sm-4\">\r\n                    <a ng-href=\"{{group.url}}\">GO TO GROUP ></a>\r\n                </div>\r\n            </div>\r\n            <div class=\"ci-group-summary\" ng-show=\"ctrl.isGroupActive(group.id)\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-8\">\r\n                            <p>{{group.description}}</p>\r\n                            <h5>Leadership</h5>\r\n                        </div>\r\n                        <div class=\"col-sm-4\">\r\n                            <a ng-href=\"{{group.profileUrl}}\">VIEW ORG CHART</a>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\" ng-repeat=\"leader in group.leaders\">\r\n                        <div class=\"media employee-card\">\r\n                            <img class=\"d-flex align-self-start mr-3 emp-photo\" ng-src=\"{{leader.picUrl}}\">\r\n                            <div class=\"media-body\">\r\n                                <h3 class=\"mt-0 emp-name\">{{leader.name}}</h3>\r\n                                <h5 class=\"emp-title\">{{leader.title}}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <input type=\"hidden\" ng-model=\"group.id\" />\r\n        </div>\r\n   </div>\r\n</section>\r\n<bookmark-page></bookmark-page>";

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'howDoICtrl';

	myApp.controller(controllerName, ['$scope', 'common', 'howDoIService', 'COM_CONFIG', function ($scope, common, howDoIService, COM_CONFIG) {
	    var ctrl = this;

	    this.$onInit = function () {
	        howDoIService.gethowDoI().then(function (data) {
	            ctrl.howDoI = data;
	        });
	    };
	}]).component('howDoI', {
	    template: __webpack_require__(49),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 49 */
/***/ (function(module, exports) {

	module.exports = "<div ng-repeat=\"item in ctrl.howDoI\">\r\n    <h3>{{ item.title }}</h3>\r\n        <li>\r\n            <a href=\"{{ item.URL }}\">{{ item.title }}</a>\r\n        </li>\r\n    </ul>\r\n</div>\r\n";

/***/ }),
/* 50 */
/***/ (function(module, exports) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'imageLoaderCtrl';

	myApp.directive('imageLoader', function () {
	    return {
	        link: function link(scope, element, attrs) {
	            scope.$watch('window.lowBandwidth', function () {
	                if (!window.lowBandwidth) {
	                    element.append('<img src="' + scope.imageSrc + '" title="' + scope.imageAltText + '" class="' + scope.imageCssClass + '" />');
	                }
	            });
	        },
	        scope: {
	            imageSrc: '@',
	            imageCssClass: '@',
	            imageAltText: '@'
	        }
	    };
	});

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'locationPlacesController';

	myApp.controller(controllerName, ['$scope', '$q', 'taxonomyService', 'COM_CONFIG', function ($scope, $q, taxonomyService, COM_CONFIG) {
	    var ctrl = this;
	    ctrl.places = [];
	    ctrl.activeTab = 'people';

	    this.$onInit = function () {
	        taxonomyService.getTermFromMasterTermsetByGuid(COM_CONFIG.termSets.locationTermId).then(function (data) {
	            ctrl.places = _.reject(data, function (p) {
	                return p.name == 'US';
	            });
	            $scope.$apply();
	        });
	    };
	}]).component('locationPlaces', {
	    template: __webpack_require__(52),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 52 */
/***/ (function(module, exports) {

	module.exports = "<section class=\"location-places\">\r\n    <div class=\"card\" ng-repeat=\"place in ctrl.places track by $index\">\r\n         <h5>{{place.name}}</h5>       \r\n        <ul>\r\n            <li ng-repeat=\"country in place.Nodes track by $index\">\r\n                <a ng-href=\"#\">\r\n                    {{country.name}}\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</section>";

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'missionPhotoController';

	myApp.controller(controllerName, ['$scope', '$q', 'COM_CONFIG', 'missionPhotoService', function ($scope, $q, COM_CONFIG, missionPhotoService) {
	    var ctrl = this;

	    this.$onInit = function () {
	        missionPhotoService.getMissionPhotos().then(function (data) {
	            ctrl.missionPhoto = data;
	        });
	    };
	}]).component('missionPhoto', {
	    template: __webpack_require__(54),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 54 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"photos\">\r\n    <h2>Need New Name</h2>\r\n    <h3>Stay connected with Compassion International</h3>\r\n    <ul>\r\n        <li ng-repeat=\"photo in ctrl.missionPhoto track by $index\">\r\n                <img ng-src=\"{{photo.thumbnail}}\" />\r\n                <span>{{photo.caption}}</span>\r\n        </li>\r\n    </ul>\r\n    <a class=\"view-all\" target=\"_blank\" href=\"#\">Share Your Photos</a>\r\n</div>";

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'myAppsCtrl';

	myApp.controller(controllerName, ['$scope', 'common', 'appService', 'COM_CONFIG', function ($scope, common, appService, COM_CONFIG) {
	    var ctrl = this;
	    var userId = _spPageContextInfo.userId;
	    var isToolbarDirty = false;

	    $scope.$parent.$watch('ctrl.myApps', function (newVal, oldVal, scope) {
	        ctrl.myApps = newVal;
	        ctrl.myAppsFromDb = scope.ctrl.myAppsFromDb;
	    });
	    this.$onInit = function () {
	        ctrl.myApps = $scope.$parent.ctrl.myApps;
	    };
	}]).component('myApps', {
	    template: __webpack_require__(56),
	    controller: controllerName,
	    controllerAs: 'ctrl',
	    require: {
	        parent: '^myToolbar'
	    }
	});

/***/ }),
/* 56 */
/***/ (function(module, exports) {

	module.exports = "<ul>\r\n    <li ng-repeat=\"app in ctrl.myApps\">\r\n        <a ng-href=\"{{ app.iconUrl }}\">\r\n            <img ng-src=\"{{ app.iconUrl }}\" />\r\n            <div>{{ app.title }}</div>\r\n        </a>\r\n    </li>\r\n</ul>";

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'bookmarkCtrl';

	myApp.controller(controllerName, ['$scope', 'common', 'modalService', 'bookmarkService', 'COM_CONFIG', function ($scope, common, modalService, bookmarkService, COM_CONFIG) {
	    var ctrl = this;
	    var userId = _spPageContextInfo.userId;
	    var isDirty = false;

	    ctrl.enableSaveButton = function () {
	        if (isDirty) $scope.systemMessage = '';
	        return !isDirty;
	    };
	    this.$onInit = function () {
	        bookmarkService.getMyBookmarks(userId).then(function (response) {
	            ctrl.myBookmarks = angular.copy(response);
	            ctrl.myBookmarksFromDb = response;
	            getSortOrderLimits();
	        });
	    };
	    $scope.$parent.$watch('ctrl.myBookmarks', function (newVal, oldVal, scope) {
	        if (newVal == null) return;
	        ctrl.myBookmarks = newVal;
	        ctrl.myBookmarksFromDb = scope.ctrl.myBookmarksFromDb;
	    });

	    function getSortOrderLimits() {
	        var count = ctrl.myBookmarks.length;
	        var response = [];
	        for (var i = 1; i <= count; i++) {
	            response.push(i);
	        }
	        $scope.myBookmarksSortList = response;
	    }
	}]).component('myBookmarks', {
	    template: __webpack_require__(58),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 58 */
/***/ (function(module, exports) {

	module.exports = "<ul ng-repeat=\"bk in ctrl.myBookmarks track by bk.id\">\r\n    <li>\r\n        <a ng-href=\"{{ bk.url }}\">\r\n            <div>{{ bk.title }}</div>                        \r\n        </a>                    \r\n    </li>\r\n</ul>\r\n    ";

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'myDepartmentController';

	myApp.controller(controllerName, ['$scope', '$q', 'COM_CONFIG', 'userProfileService', function ($scope, $q, COM_CONFIG, userProfileService) {
	    var ctrl = this;
	    var delveUrl = '';

	    ctrl.toggleVisibility = function () {
	        return ctrl.activeTab == 'people';
	    };
	    $scope.$on('activeTab', function (event, arg) {
	        ctrl.activeTab = arg;
	    });

	    this.$onInit = function () {
	        ctrl.activeTab = 'people';
	        userProfileService.getCurrentUserProfile().then(function (data) {
	            ctrl.myProfile = data;
	            var department = _.find(data.UserProfileProperties, function (d) {
	                return d.Key == 'Department';
	            }).Value;
	            console.log(department);
	            userProfileService.getUsersInMyDepartment(department).then(function (data) {
	                var response = [];
	                for (var i = 0; i < data.length; i++) {
	                    var p = data[i];
	                    var d = {};
	                    d.picUrl = p.Picture.Url;
	                    d.title = p.Title;
	                    d.jobTitle = p.JobTitle;
	                    d.email = p.EMail;
	                    d.profileUrl = delveUrl + p.UserName;
	                    response.push(d);
	                }

	                ctrl.myDepartment = response;
	            });
	        });
	    };
	}]).component('myDepartment', {
	    template: __webpack_require__(60),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 60 */
/***/ (function(module, exports) {

	module.exports = "<section class=\"my-department\" ng-show=\"ctrl.toggleVisibility()\">\r\n    <h2>My Department</h2>\r\n    <div class=\"card row\" ng-repeat=\"person in ctrl.myDepartment track by $index\">\r\n        <div class=\"col-sm-4\">\r\n            <img class=\"emp-photo\" ng-src=\"{{person.picUrl}}\" />\r\n        </div>\r\n        <div class=\"col-sm-8\">\r\n            <div>{{person.title}}</div>\r\n            <div>{{person.jobTitle}}</div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-5\">\r\n                    <a ng-href=\"mailto: {{person.email}}\">\r\n                        {{person.email}}\r\n                    </a>                    \r\n                </div>\r\n                <div class=\"col-sm-2\">|</div>\r\n                <div class=\"col-sm-5\">\r\n                    <a ng-href=\"{{person.profileUrl}}\">View Profile</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>";

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'myDocumentsCtrl';

	myApp.controller(controllerName, ['$scope', 'documentService', 'COM_CONFIG', function ($scope, documentService, COM_CONFIG) {
	    var userId = _spPageContextInfo.userId,
	        userDisplayName = _spPageContextInfo.userDisplayName;

	    this.$onInit = function () {
	        documentService.getMyDocuments(userDisplayName).then(function (response) {
	            ctrl.myDocuments = response;
	        });
	    };
	}]).component('myDocuments', {
	    template: __webpack_require__(62),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 62 */
/***/ (function(module, exports) {

	module.exports = "<ul>\r\n    <li ng-repeat=\"doc in ctrl.myDocuments\">\r\n        <a ng-href=\"{{ doc.url }}\">\r\n            <div>{{ doc.title }}</div>\r\n        </a>\r\n    </li>\r\n</ul>";

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'myRssFeedsCtrl';

	myApp.controller(controllerName, ['$scope', 'rssFeedService', 'COM_CONFIG', function ($scope, rssFeedService, COM_CONFIG) {
	    var ctrl = this;
	    ctrl.showManager = false;
	    this.$onInit = function () {
	        var userId = _spPageContextInfo.userId;
	        var articleLimit = $scope.ctrl.articlelimit != null ? $scope.ctrl.articlelimit : 5;
	        rssFeedService.getMyRssFeeds(userId, articleLimit).then(function (response) {
	            ctrl.myFeeds = response;
	            ctrl.showNoFeedsMessage = ctrl.myFeeds.length == 0;
	        });
	    };
	}]).component('myRssFeeds', {
	    template: __webpack_require__(64),
	    controller: controllerName,
	    controllerAs: 'ctrl',
	    bindings: {
	        articlelimit: '@'
	    }
	});

/***/ }),
/* 64 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"card world-news\" ng-show=\"ctrl.showNoFeedsMessage\">\r\n    <div class=\"card-body\">\r\n        <h2 class=\"section\">World News</h2>\r\n        <p class=\"card-text\">\r\n            Save your favorite external news sites for easy access. News headlines will be updated in real-time.\r\n        </p>\r\n        <a class=\"btn btn-block\" ng-click=\"ctrl.showManager = true;\">Get Started</a>\r\n    </div>\r\n</div>\r\n\r\n<rss-feeds ng-show=\"!ctrl.showNoFeedsMessage\"></rss-feeds>\r\n<rss-feed-manager ng-show=\"!ctrl.showNoFeedsMessage\"></rss-feed-manager>\r\n";

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'mySitesCtrl';

	myApp.controller(controllerName, ['$scope', 'common', 'spService', 'COM_CONFIG', function ($scope, common, spService, COM_CONFIG) {
	    var ctrl = this;

	    this.$onInit = function () {
	        bookmarkService.getMyBookmarks(userId).then(function (response) {
	            ctrl.myBookmarks = angular.copy(response);
	            ctrl.myBookmarksFromDb = response;
	            getSortOrderLimits();
	        });
	    };
	}]).component('mySites', {
	    template: __webpack_require__(66),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 66 */
/***/ (function(module, exports) {

	module.exports = "<ul ng-repeat=\"site in ctrl.mySites track by $index\">\r\n    <li>\r\n        <a ng-href=\"{{ site.url }}\">\r\n            <div>{{ site.title }}</div>                        \r\n        </a>                    \r\n    </li>\r\n</ul>\r\n    ";

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'toolbarCtrl';

	myApp.controller(controllerName, ['$scope', 'common', 'modalService', 'appService', 'bookmarkService', 'graphService', 'COM_CONFIG', function ($scope, common, modalService, appService, bookmarkService, graphService, COM_CONFIG) {
	    var ctrl = this;
	    var userId = _spPageContextInfo.userId;
	    var isToolbarDirty = false;
	    ctrl.toolbarSelectorId = 'ci-toolbar-selector', ctrl.toolbarContainerId = 'ci-toolbar-container', ctrl.toolbarContentClassName = 'toolbar-content';

	    ctrl.selectedTabId = 'ci-apps';
	    this.$onInit = function () {
	        appService.getMyApps(userId).then(function (response) {
	            ctrl.myAppsFromDb = response;
	            ctrl.myApps = angular.copy(response);
	        });
	        bookmarkService.getMyBookmarks(userId).then(function (response) {
	            ctrl.myBookmarks = angular.copy(response);
	            ctrl.myBookmarksFromDb = response;
	        });
	    };
	    ctrl.select = function (tabId) {
	        if (ctrl.selectedTabId === tabId) return;
	        ctrl.selectedTabId = tabId;
	    };
	}]).component('myToolbar', {
	    template: __webpack_require__(68),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 68 */
/***/ (function(module, exports) {

	module.exports = "<section id=\"ci-toolbar-container\" class=\"nav-toolbar\">\r\n\r\n    <div id=\"ci-toolbar\" class=\"\">\r\n        <div class=\"\">\r\n            <ul id=\"ci-toolbar-selector\" class=\"nav nav-tabs\">\r\n\r\n                <div class=\"manage-toolbar\">\r\n                    <toolbar-manager></toolbar-manager>\r\n                </div>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" ng-class=\"{active:ctrl.isSelected('ci-apps')}\" ng-click=\"ctrl.select('ci-apps')\" href=\"javascript: void(0);\">apps + tools</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" ng-class=\"{active:ctrl.isSelected('ci-documents')}\" ng-click=\"ctrl.select('ci-documents')\" href=\"javascript: void(0);\">documents</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" ng-class=\"{active:ctrl.isSelected('ci-bookmarks')}\" ng-click=\"ctrl.select('ci-bookmarks')\" href=\"javascript: void(0);\">bookmarks</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" ng-class=\"{active:ctrl.isSelected('ci-sites')}\" ng-click=\"ctrl.select('ci-sites')\" href=\"javascript: void(0);\">project sites</a>\r\n                </li>\r\n            </ul>\r\n            <div class=\"toolbar-content\" id=\"ci-apps\" ng-show=\"ctrl.selectedTabId == 'ci-apps'\">\r\n                <my-apps></my-apps>\r\n            </div>\r\n            <div class=\"toolbar-content\" id=\"ci-documents\" ng-show=\"ctrl.selectedTabId == 'ci-documents'\">\r\n                <h3>Recent Documents</h3>\r\n                <my-documents></my-documents>\r\n            </div>\r\n            <div class=\"toolbar-content\" id=\"ci-bookmarks\" ng-show=\"ctrl.selectedTabId == 'ci-bookmarks'\">\r\n                <my-bookmarks></my-bookmarks>\r\n            </div>\r\n            <div class=\"toolbar-content\" id=\"ci-sites\" ng-show=\"ctrl.selectedTabId == 'ci-sites'\">\r\n                <ul>\r\n                    <li><a>site 1</a></li>\r\n                </ul>\r\n            </div>            \r\n        </div>        \r\n    </div>\r\n</section>";

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'myDocumentsCtrl';

	myApp.controller(controllerName, ['$scope', 'navigationService', 'COM_CONFIG', function ($scope, navigationService, COM_CONFIG) {
	    var ctrl = this;
	    ctrl.isSearchVisible = false;
	    this.$onInit = function () {
	        navigationService.getAllNodes().then(function (response) {
	            ctrl.navNodes = response;
	        });
	        $('div.search-background > input').on('focus', function () {
	            var txtVal = $('div.search-background > input').val();
	            if (txtVal == 'Search') {
	                $('div.search-background > input').val('');
	            }
	        });
	        $('div.search-background > input').on('blur', function () {
	            var txtVal = $('div.search-background > input').val();
	            if (txtVal == '') {
	                $('div.search-background > input').val('Search');
	            }
	        });
	        $('div.search-background > input').on('keypress', function (ev) {
	            var keycode = ev.keyCode ? ev.keyCode : ev.which;
	            var txtVal = $('div.search-background > input').val();
	            if (keycode == '13') {
	                window.location = COM_CONFIG.searchWeb + '?k=' + txtVal;
	            }
	        });
	    };
	    ctrl.toggleSearchBox = toggleSearchBox;
	    ctrl.isSearchBoxVisible = false;
	    ctrl.searchTitle = 'Search';

	    function toggleSearchBox() {

	        ctrl.isSearchVisible = !ctrl.isSearchVisible;
	        if (ctrl.isSearchVisible) {
	            $('div.search-background').show("slide", { direction: "right" }, 1000);
	            $('#searchQueryTerm').focus();
	            ctrl.searchTitle = '';
	        } else {
	            $('div.search-background').hide("slide", { direction: "right" }, 1000);
	            ctrl.searchTitle = 'Search';
	        }
	    }
	}]).component('navigation', {
	    template: __webpack_require__(70),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 70 */
/***/ (function(module, exports) {

	module.exports = "<!-- <div class=\"container\">\r\n<nav class=\"row\">\r\n    <div class=\"col-sm-1 nav-icon\">\r\n        <img src=\"/sites/stage/_catalogs/masterpage/Compassion/images/skippy-white.png\" />\r\n    </div>\r\n    <div class=\"col-sm-9\">\r\n        <div ng-repeat=\"node in ctrl.navNodes\" class=\"nav-node\">\r\n            <a ng-href=\"{{ node.url }}\">\r\n                <div>{{ node.title }}</div>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-2 nav-search\">\r\n        <div class=\"search-button\">\r\n            <a ng-click=\"ctrl.toggleSearchBox()\">\r\n                <i class=\"fa fa-search\"></i>\r\n                <span ng-bind=\"ctrl.searchTitle\"></span>\r\n            </a>            \r\n        </div>\r\n        <div class=\"search-background\" style=\"display: none;\">\r\n            <input id=\"searchQueryTerm\" type=\"text\" value=\"Search\" />\r\n        </div>\r\n    </div>\r\n</nav>\r\n</div> -->\r\n\r\n<div class=\"container\">\r\n<nav class=\"navbar navbar-expand-lg\">\r\n  <a class=\"navbar-brand\" href=\"#\"><img src=\"/sites/stage/_catalogs/masterpage/Compassion/images/skippy-white.png\" /></a>\r\n\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"><i class=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n</span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li ng-repeat=\"node in ctrl.navNodes\" class=\"nav-item\">\r\n            <a ng-href=\"{{ node.url }}\">\r\n                <div>{{ node.title }}</div>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n    <div class=\"form-inline my-2 my-lg-0\">\r\n     <!--  <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\">\r\n      <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button> -->\r\n      <div class=\"search-button\">\r\n            <a ng-click=\"ctrl.toggleSearchBox()\">\r\n                <i class=\"fa fa-search\"></i>\r\n                <span ng-bind=\"ctrl.searchTitle\"></span>\r\n            </a>            \r\n        </div>\r\n        <div class=\"search-background\" style=\"display: none;\">\r\n            <input id=\"searchQueryTerm\" type=\"text\" value=\"Search\" />\r\n        </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n</div>";

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var ctrlName = "newHires";
	var myApp = angular.module('compassionIntranet');

	myApp.controller(ctrlName, ['$scope', 'newHireService', 'COM_CONFIG', function ($scope, newHireService, COM_CONFIG) {
	    var ctrl = this;

	    this.$onInit = function () {
	        newHireService.getHire().then(function (data) {
	            ctrl.getHire = data;
	        });
	    };
	}]).component('getHire', {
	    template: __webpack_require__(72),
	    controller: ctrlName,
	    controlleras: 'ctrl',
	    bindings: {
	        hirelimit: '@'
	    }
	});

/***/ }),
/* 72 */
/***/ (function(module, exports) {

	module.exports = "<section class=\"new-hires\">\r\n    <div class=\"card\" ng-repeat=\"newhire in ctrl.newHire track by $index\">\r\n        <ul>\r\n            <li ng-repeat=\"newHire.contact\">\r\n                <a ng-href=\"#\">\r\n                    {{newHire.date}}\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</section>";

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var ctrlName = 'NewsLandingCtrl';
	var app = angular.module('compassionIntranet');
	app.controller(ctrlName, ['$scope', '$location', 'newsService', 'taxonomyService', 'COM_CONFIG', function ($scope, $location, newsService, taxonomyService, COM_CONFIG) {
	    var ctrl = this;
	    // var cacheObj = pnp.storage.local;
	    //var _categories, _locations;
	    var parameters = $location.search();
	    $scope.searchTerm = '';
	    $scope.news = [];
	    $scope.startRow = 0;
	    $scope.categoryActive = $scope.locationActive = false;
	    if (parameters.location) {
	        $scope.selectedLocation = parameters.location;
	    } else {
	        if (COM_CONFIG.rootWeb.toLowerCase() + "/news" === bones.web.url.toLowerCase()) {
	            //On main news landing site
	            $scope.selectedLocation = "All";
	        } else {
	            $scope.selectedLocation = "";
	        }
	    }
	    $scope.selectedCategory = parameters.category ? parameters.category : '';

	    taxonomyService.getTermFromMasterTermsetByGuid(COM_CONFIG.termSets.locationTermId).then(function (response) {
	        console.log('location terms');
	        console.dir(response);
	        $scope.allLocations = response.map(function (item) {
	            return item.Key;
	        });
	        if (!parameters.category) {
	            //If category is already set locations will come from search call
	            $scope.locations = $scope.allLocations;
	        }
	    });

	    $scope.setTab = function (newTab) {
	        if ($scope.tab !== newTab) {
	            $scope.selectedCategory = '';
	            if (newTab === 1) {
	                $scope.getNewsArticles(false);
	                getCategoryTerms(COM_CONFIG.termSets.newsCategoryTermId);
	                $scope.searchText = "Search News";
	            } else {
	                $scope.getEvents(false);
	                getCategoryTerms(COM_CONFIG.termSets.eventCategoryTermId);
	                $scope.searchText = "Search Events";
	            }
	        }
	        $scope.tab = newTab;
	    };

	    $scope.isSet = function (tabNum) {
	        return $scope.tab === tabNum;
	    };

	    $scope.search = function () {
	        if ($scope.tab === 1) {
	            $scope.getNewsArticles(false);
	        } else {
	            $scope.getEvents(false);
	        }
	    };

	    $scope.getNewsArticles = function (loadMore) {
	        //$scope.news = null;
	        var me = this;
	        $scope.loading = true;
	        var start = 0;
	        if (loadMore) {
	            start = $scope.startRow;
	        }
	        newsService.getLandingNews($scope.selectedLocation, $scope.selectedCategory, $scope.searchTerm, start).then(function (news) {
	            console.log("News:", news);
	            if (loadMore) {
	                $scope.news = $scope.news.concat(news.PrimarySearchResults);
	            } else {
	                $scope.news = news.PrimarySearchResults;
	            }
	            if ($scope.selectedLocation || $scope.searchTerm) {
	                $scope.categories = getRefinementResults(news, "RefinableString15");
	            } else {
	                $scope.categories = $scope.allCategories;
	            }
	            if ($scope.selectedCategory || $scope.searchTerm) {
	                $scope.locations = getRefinementResults(news, "RefinableString03");
	            } else {
	                $scope.locations = $scope.allLocations;
	            }
	            $scope.totalRows = news.TotalRows;
	            $scope.startRow = loadMore ? $scope.startRow + 10 : 10;
	            $scope.loading = false;
	            //$scope.$apply();
	        });
	    };

	    function getRefinementResults(results, managedProperty) {
	        var returnedRefiners;
	        if (results.RawSearchResults && results.RawSearchResults.PrimaryQueryResult && results.RawSearchResults.PrimaryQueryResult.RefinementResults && results.RawSearchResults.PrimaryQueryResult.RefinementResults.Refiners && results.RawSearchResults.PrimaryQueryResult.RefinementResults.Refiners.length > 0) {

	            var refiners = results.RawSearchResults.PrimaryQueryResult.RefinementResults.Refiners;
	            returnedRefiners = refiners.filter(function (item) {
	                return item.Name === managedProperty;
	            });
	            if (returnedRefiners && returnedRefiners[0] && returnedRefiners[0].Entries && returnedRefiners[0].Entries.length > 0) {
	                var test = returnedRefiners[0].Entries.map(function (item) {
	                    return item.RefinementName;
	                });

	                return test;
	            } else {
	                return [];
	            }
	        }
	    }
	}]).component('newsLanding', {
	    bindings: {
	        default: '@'
	    },
	    template: __webpack_require__(74),
	    controller: ctrlName,
	    controllerAs: 'ctrl'
	}).directive('searchEnter', function () {
	    return function (scope, element, attrs) {
	        element.bind("keydown keypress", function (event) {
	            if (event.which === 13) {
	                scope.$apply(function () {
	                    scope.$eval(attrs.searchEnter);
	                });

	                event.preventDefault();
	            }
	        });
	    };
	});

/***/ }),
/* 74 */
/***/ (function(module, exports) {

	module.exports = "<div id=\"SearchBox\">\r\n    <input type=\"text\" placeholder=\"{{searchText}}\" ng-class=\"{'focus': hasFocus}\" ng-focus=\"hasFocus=true\" ng-blur=\"hasFocus=false\" ng-model=\"searchTerm\" search-enter=\"search()\">\r\n    <a class=\"click-submit\" ng-click=\"searchTerm = ''\"></a>\r\n</div>\r\n<div class=\"search-filters\">\r\n    <span class=\"filter-by\">Filter By:</span>\r\n    <div class=\"category\">\r\n        <div id=\"dd-category\" class=\"compassion-dropdown dd\" tabindex=\"1\" ng-class=\"{'active' : categoryActive}\" ng-click=\"dropdown('category')\">\r\n            {{selectedCategory || 'Category'}}\r\n            <ul class=\"dropdown\">\r\n                <li ng-click=\"categorySelect(this)\">\r\n                    <a href=\"#\"><i class=\"icon-user\"></i>Clear Selection</a>\r\n                </li>\r\n                <li ng-repeat=\"category in categories\" ng-click=\"categorySelect(this)\">\r\n                    <a href=\"#\"><i class=\"icon-user\"></i>{{category}}</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"location\">\r\n        <div id=\"dd-location\" class=\"compassion-dropdown dd\" tabindex=\"2\" ng-class=\"{'active' : locationActive}\" ng-click=\"dropdown('location')\">\r\n            {{selectedLocation || 'Location'}}\r\n            <ul class=\"dropdown\">\r\n                <li ng-click=\"locationSelect(this)\">\r\n                    <a href=\"#\"><i class=\"icon-user\"></i>Clear Selection</a>\r\n                </li>\r\n                <li ng-repeat=\"location in locations\" ng-click=\"locationSelect(this)\">\r\n                    <a href=\"#\"><i class=\"icon-user\"></i>{{location}}</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div ng-show=\"loading\">\r\n    <img src=\"/_LAYOUTS/1033/Images/progress.gif\" />\r\n</div>\r\n<div class=\"tab-content news\" ng-class=\"{'current': isSet(1)}\" ng-show=\"isSet(1) && !loading\">\r\n    <div class=\"tab-elements\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 news search-results\">\r\n                <div ng-if=\"totalRows\" ng-class=\"{'no-img': !article.PublishingImage}\" class=\"search-result-item\" ng-repeat=\"article in news\">\r\n                    <div ng-hide=\"!article.PublishingImage\" class=\"image-contain\">\r\n                        <img ng-src=\"{{article.ImageUrl}}\" />\r\n                    </div>\r\n                    <div class=\"search-results-info\">\r\n                        <span class=\"event-type\" ng-if=\"article.RefinableString15\">{{article.RefinableString15}}</span>\r\n                        <a href=\"{{article.Path}}\">\r\n                            <h4 class=\"event-title\">{{article.Title}}</h4>\r\n                        </a>\r\n                        <div class=\"date-share\">\r\n                            <span class=\"regular-body numbers\">{{article.ArticleDate}}</span>\r\n                            <a href=\"{{article.Path}}#article-comments\">\r\n                                <card-footer page-url={{article.Path}} item-id={{article.ListItemID}}></card-footer>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div ng-if=\"!totalRows\">\r\n                    No Results\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"tab-content events\" ng-class=\"{'current': isSet(2)}\" ng-show=\"isSet(2) && !loading\">\r\n    <div class=\"tab-elements\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 whats-happening\">\r\n                <div ng-if=\"totalRows\" ng-class=\"{'no-img': !article.PublishingImage}\" class=\"event\" ng-repeat=\"event in events\">\r\n                    <!--<div class=\"copy-contain\">-->\r\n                    <span class=\"event-type\">{{event.RefinableString14}}</span>\r\n                    <div class=\"event-info\">\r\n                        <a href=\"{{event.Path}}\">\r\n                            <h4 class=\"event-title\">{{event.Title}}</h4>\r\n                        </a>\r\n                        <div class=\"event-date-time\">\r\n                            <span class=\"event-date\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"icon-Calendar\"></span>\r\n                            <span class=\"date numbers\">{{event.ArticleDate}}</span>\r\n                            </span>\r\n                            <span class=\"event-time\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"icon-Time\"></span>\r\n                            <span class=\"time numbers\">{{event.startTime}} - {{event.endTime}}</span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <!--</div>-->\r\n                </div>\r\n                <div ng-if=\"!totalRows\">\r\n                    No Results\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"load-more-contain\">\r\n    <btn ng-show=\"startRow < totalRows\" class=\"primary\" value=\"Load More\" ng-click=\"getNewsArticles(true)\">Load More</btn>\r\n</div>";

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'newsPageLikesController';

	myApp.controller(controllerName, ['$scope', 'yammerApiService', function ($scope, yammerApiService) {
	    var ctrl = this;

	    this.$onInit = function () {
	        var messageId = getMessageId();
	        yammerApiService.getLikesCount(messageId).then(function (response) {
	            ctrl.likeCount = response;
	        });
	    };
	    function getMessageId() {
	        var messageId = $('iframe#embed-feed').contents().find();
	        console.log($('iframe#embed-feed').contents());
	    }
	}]).component('newsPageLikes', {
	    template: __webpack_require__(76),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 76 */
/***/ (function(module, exports) {

	module.exports = "<section class=\"ci-news-page-likes\">\r\n    <i class=\"fa fa-heart\"></i>\r\n    <span>{{ctrl.likeCount}}</span>\r\n</section>";

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'peoplePlacesController';

	myApp.controller(controllerName, ['$rootScope', '$scope', '$q', 'COM_CONFIG', function ($rootScope, $scope, $q, COM_CONFIG) {
	    var ctrl = this;
	    ctrl.activeTab = 'people';

	    this.$onInit = function () {
	        $rootScope.$broadcast('activeTab', 'people');
	    };
	    ctrl.toggleActiveTab = function (tabName) {
	        ctrl.activeTab = tabName;
	        $rootScope.$broadcast('activeTab', tabName);
	    };
	}]).component('peoplePlaces', {
	    template: __webpack_require__(78),
	    controller: controllerName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 78 */
/***/ (function(module, exports) {

	module.exports = "<section class=\"people-places news-events\">\r\n    <ul class=\"nav nav-tabs\">\r\n        <li class=\"nav-item\" ng-click=\"ctrl.toggleActiveTab('people')\"><a class=\"nav-link alt\">People</a></li>\r\n        <li class=\"nav-item\" ng-click=\"ctrl.toggleActiveTab('places')\"><a class=\"nav-link alt\">Places</a></li>\r\n    </ul>\r\n    <div class=\"ci-people\" ng-show=\"ctrl.activeTab == 'people'\">\r\n        <find-people></find-people>\r\n    </div>\r\n    <div class=\"ci-places\" ng-show=\"ctrl.activeTab == 'places'\">\r\n        <location-places></location-places>        \r\n    </div>\r\n    <input id=\"ci-pp-activeTab\" type=\"hidden\" ng-model=\"ctrl.activeTab\" />\r\n</section>\r\n\r\n";

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var ctrlName = "quickLinksCtrl";

	angular.module('compassionIntranet').controller(ctrlName, ['$scope', 'listService', 'DISCOVER_CONFIG', function ($scope, listService, DISCOVER_CONFIG) {
	    var cacheObj = pnp.storage.local;
	    // if (!DISCOVER_CONFIG.useCaching) {
	    //     cacheObj.delete(ctrlName);
	    // }
	    var now = moment();
	    var expire = $pnp.util.dateAdd(now, "minute", 5);
	    cacheObj.getOrPut(ctrlName, listService.getMyLinks, expire).then(function (news) {
	        $scope.news = news;
	    });
	}]).component('quickLinks', {
	    template: __webpack_require__(80),
	    controller: ctrlName,
	    controlleras: 'ctrl'
	});

/***/ }),
/* 80 */
/***/ (function(module, exports) {

	module.exports = "<div class=\"quick-links\">\r\n    <a target=\"{{item.DiscoverIsExternal ? '_blank' : '_self'}}\" ng-repeat=\"item in news\" class=\"link\" ng-href=\"{{item.DiscoverUrl}}\">\r\n        <div class=\"image-contain\">\r\n            <img ng-src=\"{{item.DiscoverPopularIcon}}\">\r\n        </div>\r\n        <span class=\"link-title\">{{item.Title}}</span>\r\n    </a>\r\n</div>";

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var ctrlName = "relatedDocCtrl";
	var myApp = angular.module('compassionIntranet');

	myApp.controller(ctrlName, ['$scope', 'relatedDocService', 'COM_CONFIG', function ($scope, relatedDocService, COM_CONFIG) {

	    relatedDocService.getData().then(function (data) {
	        $scope.documents = COM_CONFIG.rootWeb;

	        if (data.length === 0) {
	            $scope.notFound = "No related documents found";
	        } else if (data[0].contentType === true) {

	            $scope.documents = data;
	        }
	    });
	}]).component('relatedDoc', {
	    template: __webpack_require__(82),
	    controller: ctrlName,
	    controlleras: 'ctrl',
	    bindings: {
	        documentlimit: '@'
	    }
	});

/***/ }),
/* 82 */
/***/ (function(module, exports) {

	module.exports = "<div ng-show=\"Documents\" class=\"trending-stories\">\r\n    <span class=\"line-title\">Related Documents</span>\r\n    <div ng-repeat=\"x in Documents\" class=\"story\">\r\n        <div class=\"reminder-date\">\r\n            <a ng-href=\"{{x.url}}\">\r\n                <h4 class=\"news-title\">{{x.title}}</h4>\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div ng-if=\"notFound\" class=\"trending-stories\">\r\n    <span class=\"line-title\">{{notFound}}</span>\r\n</div>";

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var ctrlName = "relatedNewsCtrl";
	var myApp = angular.module('compassionIntranet');

	myApp.controller(ctrlName, ['$scope', 'relatedNewsService', 'COM_CONFIG', function ($scope, relatedNewsService, COM_CONFIG) {

	    relatedNewsService.getData().then(function (data) {
	        $scope.newsSite = COM_CONFIG.rootWeb + "/news/pages/default.aspx";

	        if (data.length === 0) {
	            $scope.notFound = "No related stories found";
	        } else if (data[0].contentType === true) {
	            $scope.news = data;
	        }
	    });
	}]).component('relatedNews', {
	    template: __webpack_require__(84),
	    controller: ctrlName,
	    controlleras: 'ctrl',
	    bindings: {
	        articlelimit: '@'
	    }
	});

/***/ }),
/* 84 */
/***/ (function(module, exports) {

	module.exports = "<div ng-show=\"News\" class=\"trending-stories\">\r\n    <span class=\"line-title\">Related News</span>\r\n    <div ng-repeat=\"x in news\" class=\"story\">\r\n        <div class=\"reminder-date\">\r\n            <span class=\"news-type\">{{x.category}}</span>\r\n            <a ng-href=\"{{x.url}}\">\r\n                <h4 class=\"news-title\">{{x.title}}</h4>\r\n            </a>\r\n            <span class=\"regular-body numbers\">{{x.publishDate}}</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div ng-if=\"notFound\" class=\"trending-news\">\r\n    <span class=\"line-title\">{{notFound}}</span>\r\n</div>";

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'rssFeedManagerCtrl';

	myApp.controller(controllerName, ['$scope', '$q', 'common', 'modalService', 'rssFeedService', 'COM_CONFIG', function ($scope, $q, common, modalService, rssFeedService, COM_CONFIG) {
	    var ctrl = this;
	    var userId = _spPageContextInfo.userId;
	    ctrl.isToolbarDirty = false;
	    ctrl.manageBookmarkId = 'ci-rss-feed-manage';

	    ctrl.existsFeedInMyFeeds = existsFeedInMyFeeds;
	    ctrl.saveMyFeeds = saveMyFeeds;
	    ctrl.enableSaveButton = enableSaveButton;
	    ctrl.openManageModal = openManageModal;
	    ctrl.closeModal = closeModal;

	    $scope.$parent.$watch('ctrl.myFeeds', function (newVal, oldVal, scope) {
	        if (newVal == null) return;
	        ctrl.myFeeds = newVal;
	        ctrl.myFeedsFromDb = angular.copy(newVal);
	    });
	    $scope.$parent.$watch('ctrl.showManager', function (newVal, oldVal, scope) {
	        if (newVal != true) return;
	        openManageModal();
	    });
	    this.$onInit = function () {
	        rssFeedService.getAllRssFeeds().then(function (response) {
	            ctrl.allFeeds = response;
	        });
	    };
	    $scope.toggleSelection = function (id) {
	        ctrl.isToolbarDirty = true;
	        var item = _.find(ctrl.myFeeds, function (i) {
	            return i.id == id;
	        });
	        if (item == null) {
	            var feed = _.find(ctrl.allFeeds, function (i) {
	                return i.id == id;
	            });
	            feed.feedId = feed.id;
	            feed.id = -1;
	            ctrl.myFeeds.push(feed);
	        } else {
	            var currentFeeds = ctrl.myFeeds;
	            ctrl.myFeeds = _.without(currentFeeds, _.findWhere(currentFeeds, {
	                id: id
	            }));
	        }
	    };
	    function saveMyFeeds() {
	        var feeds = ctrl.myFeeds;
	        var dbFeeds = ctrl.myFeedsFromDb;
	        var feedsToAdd = _.where(feeds, { id: -1 });
	        var feedsToDelete = _.filter(dbFeeds, function (a) {
	            return !_.findWhere(feeds, { id: a.id });
	        });
	        var promises = [];
	        for (var i = 0; i < feedsToAdd.length; i++) {
	            var feed = feedsToAdd[i];
	            promises.push(rssFeedService.addMyFeed(userId, feed.feedId));
	        }
	        for (var i = 0; i < feedsToDelete.length; i++) {
	            var feed = feedsToDelete[i];
	            promises.push(rssFeedService.removeMyFeed(feed.id));
	        }
	        $q.all(promises).then(function (response) {
	            rssFeedService.getMyRssFeeds(userId, $scope.$parent.ctrl.articleLimit).then(function (feeds) {
	                $scope.$parent.ctrl.myFeeds = angular.copy(feeds);
	                ctrl.isToolbarDirty = false;
	                ctrl.systemMessage = 'Success';
	            });
	        });
	    }
	    function enableSaveButton() {
	        return !ctrl.isToolbarDirty;
	    }
	    function openManageModal() {
	        modalService.Open(ctrl.manageBookmarkId);
	    }
	    function closeModal(id) {
	        modalService.Close(id);
	    }
	    function existsFeedInMyFeeds(feedId) {
	        if (!feedId) return false;
	        var item = _.find(ctrl.myFeeds, function (i) {
	            return i.feedId == feedId;
	        });
	        return item != null;
	    }
	}]).component('rssFeedManager', {
	    template: __webpack_require__(86),
	    controller: controllerName,
	    controllerAs: 'ctrl',
	    require: {
	        parent: '^myRssFeeds'
	    }
	});

/***/ }),
/* 86 */
/***/ (function(module, exports) {

	module.exports = "<div><a ng-click=\"ctrl.openManageModal()\">Manage</a></div>\r\n<modal id=\"ci-rss-feed-manage\">\r\n    <div class=\"ci-modal\">\r\n        <div class=\"modal-body\">\r\n            <h1>Manage My RSS Feeds</h1>\r\n            <h3>Available RSS Feeds</h3>\r\n            <ul>\r\n                <li ng-repeat=\"feed in ctrl.allFeeds track by feed.id\">\r\n                    <input type=\"checkbox\" ng-click=\"toggleSelection(feed.id)\" value=\"{{feed.id}}\" ng-checked=\"ctrl.existsFeedInMyFeeds(feed.id)\" />{{feed.title}}\r\n                </li>\r\n            </ul>\r\n\r\n            <button ng-click=\"ctrl.saveMyFeeds();\" ng-disabled=\"ctrl.enableSaveButton();\">Save</button>            \r\n            <button ng-click=\"ctrl.closeModal('ci-rss-feed-manage');\">Close</button>\r\n            <span>{{systemMessage}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-background\"></div>\r\n</modal>";

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'rssFeedsCtrl';

	myApp.controller(controllerName, ['$scope', 'rssFeedService', 'COM_CONFIG', function ($scope, rssFeedService, COM_CONFIG) {
	    var ctrl = this;
	    $scope.$parent.$watch('ctrl.myFeeds', function (newVal, oldVal, scope) {
	        if (newVal == null) return;
	        ctrl.myFeeds = newVal;
	    });
	}]).component('rssFeeds', {
	    template: __webpack_require__(88),
	    controller: controllerName,
	    controllerAs: 'ctrl',
	    bindings: {
	        articlelimit: '@'
	    }
	});

/***/ }),
/* 88 */
/***/ (function(module, exports) {

	module.exports = "<section>\r\n    <div class=\"card world-news\">\r\n        <div class=\"card-body\">\r\n            <h2 class=\"section\">World News</h2>\r\n            <ul ng-repeat=\"item in ctrl.myFeeds\" class=\"rss-feed\">\r\n                <span class=\"rss-category\">{{ item.title }}</span>\r\n                <li ng-repeat=\"article in item.articles\" class=\"row\">\r\n                    <div class=\"col-10 rss-title\">\r\n                        <a href=\"{{ article.guid }}\">{{ article.title }}</a>\r\n                    </div>\r\n                    <div class=\"col-2 rss-date\">\r\n                        {{ article.publishedSpanString }}\r\n                    </div>\r\n                    <div class=\"col-12 rss-divider\"><hr></div>\r\n                </li>               \r\n            </ul>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n";

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var myApp = angular.module('compassionIntranet'),
	    controllerName = 'toolbarManagerCtrl';

	myApp.controller(controllerName, ['$scope', '$q', 'common', 'modalService', 'appService', 'bookmarkService', 'COM_CONFIG', function ($scope, $q, common, modalService, appService, bookmarkService, COM_CONFIG) {
	    var ctrl = this;
	    var userId = _spPageContextInfo.userId;
	    ctrl.isToolbarDirty = false;
	    ctrl.manageBookmarkId = 'ci-bookmarks-manage', ctrl.confirmDeleteBookmarkId = 'ci-bookmarks-confirm-delete';

	    $scope.$parent.$watch('ctrl.myApps', function (newVal, oldVal, scope) {
	        if (newVal == null) return;
	        ctrl.myApps = newVal;
	        ctrl.myAppsFromDb = scope.ctrl.myAppsFromDb;
	        getSortOrderLimits();
	    });
	    $scope.$parent.$watch('ctrl.myBookmarks', function (newVal, oldVal, scope) {
	        if (newVal == null) return;
	        ctrl.myBookmarks = newVal;
	        ctrl.myBookmarksFromDb = scope.ctrl.myBookmarksFromDb;
	    });
	    ctrl.enableSaveBookmarkButton = enableSaveBookmarkButton;
	    ctrl.newBookmark = {};
	    ctrl.openModal = openModal;
	    ctrl.closeModal = closeModal;
	    ctrl.saveMyApps = saveMyApps;
	    ctrl.openManageModal = openManageModal;
	    ctrl.saveMyAppsSortOrder = saveMyAppsSortOrder;
	    ctrl.updateSortOrder = updateSortOrder;
	    ctrl.saveMyNewBookmark = saveMyNewBookmark;
	    ctrl.saveMyBookmarks = saveMyBookmarks;
	    ctrl.removeMyBookmark = removeMyBookmark;
	    ctrl.confirmDeletion = confirmDeletion;
	    ctrl.enableAddNew = false;
	    ctrl.addMyBookmark = function () {
	        ctrl.enableAddNew = true;
	        $scope.systemMessage = '';
	    };
	    ctrl.enableSaveButton = function () {
	        if (ctrl.isToolbarDirty) $scope.systemMessage = '';
	        return !ctrl.isToolbarDirty;
	    };

	    this.$onInit = function () {
	        ctrl.myApps = $scope.$parent.ctrl.myApps;
	        appService.getAllApps().then(function (response) {
	            ctrl.allApps = response;
	        });
	    };
	    $scope.myAppsSortList = [];
	    $scope.existsAppInMyApps = function (appId) {
	        if (!appId) return false;
	        var item = _.find(ctrl.myApps, function (i) {
	            return i.appId == appId;
	        });
	        return item != null;
	    };
	    $scope.toggleSelection = function (id) {
	        ctrl.isToolbarDirty = true;
	        var item = _.find(ctrl.myApps, function (i) {
	            return i.appId == id;
	        });
	        if (item == null) {
	            var app = _.find(ctrl.allApps, function (i) {
	                return i.id == id;
	            });
	            app.appId = app.id;
	            app.id = -1;
	            ctrl.myApps.push(app);
	        } else {
	            var currentTools = ctrl.myApps;
	            ctrl.myApps = _.without(currentTools, _.findWhere(currentTools, {
	                appId: id
	            }));
	        }
	    };
	    function confirmDeletion(bookmark) {
	        $scope.bookmarkIdToDelete = bookmark.id;
	        closeModal(ctrl.manageBookmarkId);
	        openModal(ctrl.confirmDeleteBookmarkId);
	    }
	    function enableSaveBookmarkButton() {
	        var isBookmarkValid = ctrl.newBookmark.url != null ? common.isUrl(ctrl.newBookmark.url) : false;
	        var isTitleValid = false;
	        if (ctrl.newBookmark.title) isTitleValid = ctrl.newBookmark.title !== '';

	        return !(ctrl.isToolbarDirty && isBookmarkValid && isTitleValid);
	    }
	    function updateSortOrder(app, oldOrder) {
	        ctrl.isToolbarDirty = true;
	        var apps = ctrl.myApps;
	        var newOrder = app.sortOrder;
	        if (oldOrder < newOrder) {
	            for (var i = oldOrder - 1; i < newOrder; i++) {
	                var t = apps[i];
	                if (i == oldOrder - 1) {
	                    apps[i].sortOrder = app.sortOrder;
	                } else if (i == newOrder - 1) {
	                    apps[i].sortOrder = t.sortOrder - 1;
	                } else {
	                    apps[i].sortOrder = t.sortOrder - 1;
	                }
	            }
	        } else if (newOrder < oldOrder) {
	            for (var i = newOrder - 1; i < oldOrder; i++) {
	                var t = apps[i];
	                if (i == newOrder - 1) {
	                    apps[i].sortOrder = t.sortOrder + 1;
	                } else if (i == oldOrder - 1) {
	                    apps[i].sortOrder = app.sortOrder;
	                } else {
	                    apps[i].sortOrder = t.sortOrder + 1;
	                }
	            }
	        }
	        ctrl.myApps = _.sortBy(apps, 'sortOrder');
	    }
	    function saveMyAppsSortOrder() {
	        for (var i = 0; i < ctrl.myApps.length; i++) {
	            var bk = ctrl.myApps[i];
	            appService.updateUserApp(bk);
	        }
	        ctrl.myAppsFromDb = angular.copy(ctrl.myBookmarks);
	        isToolbarDirty = false;
	        $scope.systemMessage = 'Success';
	    }
	    function removeMyBookmark() {
	        if (!$scope.bookmarkIdToDelete) {
	            return;
	        }
	        var bookmarkId = $scope.bookmarkIdToDelete;
	        bookmarkService.removeMyBookmark(bookmarkId).then(function (response) {
	            var myBookmarks = _.filter(ctrl.myBookmarks, function (bk) {
	                return bk.id !== bookmarkId;
	            });
	            ctrl.myBookmarks = angular.copy(myBookmarks);
	            ctrl.myBookmarksFromDb = myBookmarks;
	            $scope.$parent.ctrl.myBookmarks = ctrl.myBookmarks;
	            $scope.$parent.ctrl.myBookmarksFromDb = ctrl.myBookmarksFromDb;

	            getSortOrderLimits();
	            $scope.bookmarkIdToDelete = null;
	            closeModal(ctrl.confirmDeleteBookmarkId);
	            openModal(ctrl.manageBookmarkId);
	            $scope.systemMessage = 'Successfully deleted the bookmark';
	        });
	    }
	    function saveMyNewBookmark() {
	        var title = ctrl.newBookmark.title;
	        var url = ctrl.newBookmark.url;
	        bookmarkService.addMyBookmark(userId, title, url).then(function (data) {
	            ctrl.enableAddNew = false;
	            ctrl.isToolbarDirty = false;
	            ctrl.systemMessage = 'Success adding bookmark';
	            /*
	            var newBookmark = {};
	            newBookmark.title = title;
	            newBookmark.url = url;
	            newBookmark.id = 
	            */
	            $scope.$parent.ctrl.myBookmarks.push(data);
	            ctrl.newBookmark = null;
	        });
	    }
	    function saveMyBookmarks() {
	        var promises = [];
	        for (var i = 0; i < ctrl.myBookmarks.length; i++) {
	            var p = bookmarkService.updateUserBookmark(ctrl.myBookmarks[i]);
	            promises.push(p);
	        }
	        $q.all(promises).then(function (response) {
	            bookmarkService.getMyBookmarks(userId).then(function (data) {
	                ctrl.isToolbarDirty = false;
	                $scope.systemMessage = 'Success updating bookmarks';
	                $scope.$parent.ctrl.myBookmarks = data;
	            });
	        });
	    }
	    function saveMyApps() {
	        var apps = ctrl.myApps;
	        var dbApps = ctrl.myAppsFromDb;
	        var appsToAdd = _.where(apps, { id: -1 });
	        var fullTools = _.filter(apps, function (t) {
	            return t.id != -1;
	        });
	        var appsToDelete = _.difference(fullTools, apps);

	        for (var i = 0; i < appsToAdd.length; i++) {
	            var app = appsToAdd[i];
	            appService.addMyTool(userId, app.appId);
	        }
	        for (var i = 0; i < appsToDelete.length; i++) {
	            var app = appsToDelete[i];
	            appService.removeMyTool(app.id);
	        }
	        appService.getMyApps(userId).then(function (response) {
	            ctrl.myAppsFromDb = response;
	            ctrl.myApps = angular.copy(response);
	            getSortOrderLimits();
	            ctrl.isToolbarDirty = false;
	            ctrl.systemMessage = 'Success';
	        });
	    }
	    function getSortOrderLimits() {
	        if (ctrl.myApps == null) return;
	        var myAppsCount = ctrl.myApps.length;
	        var response = [];
	        for (var i = 1; i <= myAppsCount; i++) {
	            response.push(i);
	        }
	        $scope.myAppsSortList = response;
	    }
	    function openManageModal() {
	        var selectedTablId = $scope.$parent.ctrl.selectedTabId;
	        modalService.Open(selectedTablId + '-manage');
	    }
	    function openModal(id) {
	        modalService.Open(id);
	    }
	    function closeModal(id) {
	        modalService.Close(id);
	    }
	}]).component('toolbarManager', {
	    template: __webpack_require__(90),
	    controller: controllerName,
	    controllerAs: 'ctrl',
	    require: {
	        parent: '^myToolbar'
	    }
	});

/***/ }),
/* 90 */
/***/ (function(module, exports) {

	module.exports = "<div><a ng-click=\"ctrl.openManageModal()\">Manage</a></div>\r\n<modal id=\"ci-apps-manage\">\r\n    <div class=\"ci-modal\">\r\n        <div class=\"modal-body\">\r\n            <h1>Manage My Tools / Apps</h1>\r\n            <h3>Available Tools / Apps</h3>\r\n            <ul>\r\n                <li ng-repeat=\"app in ctrl.allApps track by app.id\">\r\n                    <input type=\"checkbox\" ng-click=\"toggleSelection(app.id)\" value=\"{{app.id}}\" ng-checked=\"existsAppInMyApps(app.id)\" />{{app.title}}\r\n                </li>\r\n            </ul>\r\n\r\n            <button ng-click=\"ctrl.saveMyApps();\" ng-disabled=\"ctrl.enableSaveButton();\">Save</button>\r\n            <button ng-click=\"ctrl.closeModal('ci-apps-manage'); ctrl.openModal('ci-apps-manage-sort');\">Edit Sort Order</button>\r\n            <button ng-click=\"ctrl.closeModal('ci-apps-manage');\">Close</button>\r\n            <span>{{systemMessage}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-background\"></div>\r\n</modal>\r\n<modal id=\"ci-apps-manage-sort\">\r\n    <div class=\"ci-modal\">\r\n        <div class=\"modal-body\">\r\n            <h1>Manage My Tools / Apps Sort Order</h1>\r\n            <ul>\r\n                <li ng-repeat=\"app in ctrl.myApps track by app.id\">\r\n                    {{app.title}}\r\n                    <select ng-model=\"app.sortOrder\" ng-change=\"ctrl.updateSortOrder(app, {{app.sortOrder}});\">\r\n                        <option ng-repeat=\"sort in myAppsSortList\" ng-value=\"{{sort}}\">{{sort}}</option>\r\n                    </select>\r\n                </li>\r\n            </ul>\r\n\r\n            <button ng-click=\"ctrl.saveMyAppsSortOrder();\" ng-disabled=\"ctrl.enableSaveButton();\">Save</button>\r\n            <button ng-click=\"ctrl.closeModal('ci-apps-manage-sort'); ctrl.openModal('ci-apps-manage');\">Close</button>\r\n            <span>{{systemMessage}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-background\"></div>\r\n</modal>\r\n<modal id=\"ci-bookmarks-manage\">\r\n    <div class=\"ci-modal\">\r\n        <div class=\"modal-body\">\r\n            <h1>Manage My Bookmarks</h1>\r\n            <ul>\r\n                <li ng-repeat=\"bk in ctrl.myBookmarks track by bk.id\">\r\n                    <input type=\"hidden\" ng-model=\"bk.id\" />\r\n                    <input type=\"text\" ng-model=\"bk.title\" ng-change=\"ctrl.isToolbarDirty = true\" />\r\n                    <input type=\"text\" ng-model=\"bk.url\" ng-change=\"ctrl.isToolbarDirty = true\" />\r\n                    <i class=\"fa fa-trash\" aria-hidden=\"true\" ng-click=\"ctrl.confirmDeletion(bk);\"></i>\r\n                </li>\r\n            </ul>\r\n            <div ng-show=\"ctrl.enableAddNew\">\r\n                <label for=\"bookmark-title\">Title</label>\r\n                <input type=\"text\" id=\"bookmark-title\" ng-model=\"ctrl.newBookmark.title\" ng-change=\"ctrl.isToolbarDirty = true\" />\r\n                <label for=\"bookmark-url\">Bookmark Url</label>\r\n                <input type=\"text\" id=\"bookmark-url\" ng-model=\"ctrl.newBookmark.url\" ng-change=\"ctrl.isToolbarDirty = true\" />\r\n                <button ng-click=\"ctrl.saveMyNewBookmark();\" ng-disabled=\"ctrl.enableSaveBookmarkButton()\">Save</button>\r\n            </div>\r\n            \r\n            <button ng-click=\"ctrl.addMyBookmark();\">Add New</button>\r\n            <!--\r\n            <button ng-click=\"ctrl.saveMyBookmarks()\" ng-disabled=\"ctrl.enableSaveButton()\">Save</button>\r\n                -->\r\n            <button ng-click=\"ctrl.closeModal('ci-bookmarks-manage');\">Close</button>\r\n            <span>{{systemMessage}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-background\"></div>\r\n</modal>\r\n<modal id=\"ci-bookmarks-confirm-delete\">\r\n    <div class=\"ci-modal\">\r\n        <div class=\"modal-body\">\r\n            <h1>Bookmark Deletion Confirmation</h1>\r\n            <p>Please confirm deletion of bookmark.</p>\r\n            <button ng-click=\"ctrl.removeMyBookmark()\">OK</button>\r\n            <button ng-click=\"ctrl.closeModal('ci-bookmarks-confirm-delete');ctrl.openModal('ci-bookmarks-manage');\">Close</button>\r\n            <span>{{systemMessage}}</span>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-background\"></div>\r\n</modal>";

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var ctrlName = "weatherController";
	var myApp = angular.module('compassionIntranet');
	myApp.controller(ctrlName, ['$scope', '$q', 'weatherService', 'userProfileService', 'COM_CONFIG', function ($scope, $q, weatherService, userProfileService, COM_CONFIG) {
	    var cacheObj = $pnp.storage.local;

	    //get user location
	    var now = moment();
	    var expire = $pnp.util.dateAdd(now, "minute", 60);
	    cacheObj.getOrPut(ctrlName, userProfileService.getUserLocation, expire).then(function (data) {
	        //    console.log("User Location");
	        //    console.dir(data);
	        $scope.UserLocation = data;
	        var location = $scope.UserLocation;
	        var unit = "F";
	        if (location == "") {
	            // console.log("Location is null. Setting location to Colorado Springs, CO");
	            var location = "Colorado Springs, CO";
	        } else {
	            if (location == "Colorado Springs") {
	                var location = "Colorado Springs, CO";
	            }
	        }

	        getWeather(location, unit);
	    });

	    //get weather

	    //pass in location to getWeather
	    function getWeather(location, unit) {
	        var now = moment();
	        var expire = $pnp.util.dateAdd(now, "minute", 5);
	        cacheObj.getOrPut(ctrlName + "_weather", weatherService.getWeather.bind(this, location, unit), expire).then(function (response) {
	            // $scope.Weather = data;
	            $scope.noWeather = false;
	            console.log("Weather", response);
	            var data = null;
	            if (response && response.data !== null && response.data.query && response.data.query.count !== 0 && response.data.query.results && response.data.query.results.channel && response.data.query.results.channel.item) {
	                data = response.data;
	            } else if (response !== null && response.query && response.query.count !== 0 && response.query.results && response.query.results.channel && response.query.results.channel.item) {
	                data = response;
	            }
	            if (data) {
	                //var forecast = data.query.results.channel.item.forecast;

	                // var js = JSON.stringify(forecast);
	                // for (var i = 0; i < 1; i++) {
	                //     $scope.forecast = data.query.results.channel.item.forecast[i];
	                // }
	                $scope.title = data.query.results.channel.item.title;
	                $scope.temp = data.query.results.channel.item.condition.temp;
	                $scope.text = data.query.results.channel.item.condition.text;
	                $scope.city = data.query.results.channel.location.city;
	                $scope.state = data.query.results.channel.location.region;

	                //get weather description
	                var desc = data.query.results.channel.item.condition.text;
	                var span = "";
	                if (desc == "Heavy Snow" || desc == "Snow" || desc == "Snow Showers") {
	                    span = "wi wi-snowflake-cold";
	                } else {
	                    if (desc == "Cloudy" || desc == "Mostly Cloudy" || desc == "Partly Cloudy") {
	                        span = "wi wi-cloudy";
	                    }

	                    if (desc == "Scattered Thunderstorms") {
	                        span = "wi wi-storm-showers";
	                    }
	                    if (desc == "Scattered Showers") {
	                        span = "wi wi-showers";
	                    }
	                    if (desc == "Fog" || desc == "Foggy" || desc == "Haze") {
	                        span = "wi wi-fog";
	                    }
	                    if (desc == "Hail" || desc == "Sleet") {
	                        span = "wi wi-hail";
	                    }
	                    if (desc == "Severe Thunderstorms" || desc == "Thuderstorm" || desc == "Thundershowers") {
	                        span = "wi wi-lightening";
	                    }
	                    if (desc == "Showers" || desc == "Rain" || desc == "Freezing Drizzle" || desc == "Drizzle" || desc == "Freezing Rain" || desc == "Mixed Rain and Hail") {
	                        span = "wi wi-raindrops";
	                    }
	                    if (desc == "Scattered Snow Showers" || desc == "Light Snow Shower") {
	                        span = "wi wi-snow";
	                    }
	                    if (desc == "Snow Flurries" || desc == "Mixed Rain and Snow" || desc == "Mixed Rain and Sleet" || desc == "Mixed Snow and Sleet") {
	                        span = "wi wi-rain-mix";
	                    }
	                    if (desc == "Isolated Thunderstorms" || desc == "Isolated Thundershowers") {
	                        span = "wi wi-thunderstorm";
	                    }
	                    if (desc == "Sunny") {
	                        span = "wi wi-day-sunny";
	                    }

	                    if (desc == "Windy" || desc == "Blowing Snow" || desc == "Breezy" || desc == "Blustery") {
	                        span = "wi wi-strong-wind";
	                    }
	                }
	                //return span;
	                $scope.image = span;
	                $scope.unit = unit;
	            } else {
	                $scope.noWeather = true;
	                cacheObj.delete(ctrlName + "_weather");
	                $scope.$apply();
	            }
	        });
	    }
	}]).component('weatherCtrl', {
	    template: __webpack_require__(92),
	    controller: ctrlName,
	    controllerAs: 'ctrl'
	});

/***/ }),
/* 92 */
/***/ (function(module, exports) {

	module.exports = "<!-- <section>\r\n    <div class=\"weather row\" ng-if=\"temp\">\r\n        <div class=\"col-sm-4\">\r\n            <div class=\"image\">\r\n                <span ng-class=\"image\"></span>\r\n            </div>            \r\n        </div>\r\n        <div class=\"col-sm-8\">\r\n            <div class=\"location\">{{city}}, {{state}}</div>\r\n            <div>\r\n                <span class=\"temp\">{{temp}}&deg{{unit}} and </span>\r\n                <span class=\"text\">{{text}}</span>\r\n            </div>            \r\n        </div>\r\n    </div>\r\n    <div class=\"weather\" ng-if=\"noWeather\">\r\n        There was an issue connecting to the weather service\r\n    </div>\r\n</section>\r\n -->\r\n\r\n<div class=\"media weather\" ng-if=\"temp\">\r\n    <div class=\"weather-icon\">\r\n      <i ng-class=\"image\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div class=\"media-body\">\r\n        <span class=\"weather-location\">{{city}}, {{state}}</span>\r\n        <span class=\"weather-info\">\r\n          <span class=\"weather-temp\">{{temp}}</span>\r\n          <sup>\r\n          <i class=\"fa fa-circle-o\" aria-hidden=\"true\"></i>\r\n          </sup>\r\n          <span class=\"weather-detail\">{{unit}} and {{text}}</span>\r\n        </span>\r\n      </div>\r\n</div>\r\n<div class=\"media weather\" ng-if=\"noWeather\">\r\n    There was an issue connecting to the weather service\r\n</div>\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    \r\n    \r\n   ";

/***/ })
/******/ ]);